{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"AWS_Account/","text":"Setting Up an AWS Account \u00b6 Create your account \u00b6 In order to sign up to AWS services, please follow the following steps: Open the Amazon Web Services home page. Choose Create an AWS Account. Note: If you signed in to AWS recently, choose Sign in to the Console. If Create a new AWS account isn\u2019t visible, first choose Sign in to a different account, and then choose Create a new AWS account. Enter your account information, and then choose Continue. Be sure that you enter your account information correctly, especially your email address. If you enter your email address incorrectly, you can\u2019t access your account. Choose Personal or Professional. Note: Personal accounts and professional accounts have the same features and functions. Enter your company or personal information. Important: For professional AWS accounts, it\u2019s a best practice to enter the company phone number rather than a personal cell phone. Configuring a root account with an individual email address or a personal phone number can make your account insecure. Read and accept the AWS Customer Agreement. Note: Be sure that you read and understand the terms of the AWS Customer Agreement. Choose Create Account and Continue. You receive an email to confirm that your account is created. You can sign in to your new account using the email address and password you registered with. However, you can\u2019t use AWS services until you finish activating your account. Add a Payment Method \u00b6 On the Payment Information page, enter the information about your payment method, and then choose Verify and Add. Note: If you want to use a different billing address for your AWS billing information, choose Use a new address before you choose Verify and Add. Important: You cannot proceed with the sign-up process until you add a valid payment method. Verify your phone number \u00b6 Choose your country or region code from the list. Enter a phone number where you can be reached in the next few minutes. Enter the code displayed in the captcha and then submit. In a few moments, an automated system contacts you. Enter the PIN you receive, and then choose Continue. Choose an AWS Support plan \u00b6 On the Select a Support Plan page, choose one of the available Support plans. For a description of the available Support plans and their benefits, see Compare AWS Support Plans . Seting up Your Budget \u00b6 You need to set up your budget, in order to avoid any extra charges,. Any extra charges will be aletrted to you before going into action. Please follow the following steps to fix your budget: After you received you registration confirmation, sign in to the console . After a successed login to the console, naviaget to your account name, and choose My Billing Daschboard Choose on the left Budgets which is located under Cost Management, Then Press Craete Budget and choose the Cost budget, then press Set your budget Name the budget, period and budget amount, then press Configure alerts Choose the alert threshold, for example 50% Put your email address to send you alert when your charges become 50% from your budget Watch it here \u00b6 More Resources \u00b6","title":"Setting Up an AWS Account"},{"location":"AWS_Account/#setting-up-an-aws-account","text":"","title":"Setting Up an AWS Account"},{"location":"AWS_Account/#create-your-account","text":"In order to sign up to AWS services, please follow the following steps: Open the Amazon Web Services home page. Choose Create an AWS Account. Note: If you signed in to AWS recently, choose Sign in to the Console. If Create a new AWS account isn\u2019t visible, first choose Sign in to a different account, and then choose Create a new AWS account. Enter your account information, and then choose Continue. Be sure that you enter your account information correctly, especially your email address. If you enter your email address incorrectly, you can\u2019t access your account. Choose Personal or Professional. Note: Personal accounts and professional accounts have the same features and functions. Enter your company or personal information. Important: For professional AWS accounts, it\u2019s a best practice to enter the company phone number rather than a personal cell phone. Configuring a root account with an individual email address or a personal phone number can make your account insecure. Read and accept the AWS Customer Agreement. Note: Be sure that you read and understand the terms of the AWS Customer Agreement. Choose Create Account and Continue. You receive an email to confirm that your account is created. You can sign in to your new account using the email address and password you registered with. However, you can\u2019t use AWS services until you finish activating your account.","title":"Create your account"},{"location":"AWS_Account/#add-a-payment-method","text":"On the Payment Information page, enter the information about your payment method, and then choose Verify and Add. Note: If you want to use a different billing address for your AWS billing information, choose Use a new address before you choose Verify and Add. Important: You cannot proceed with the sign-up process until you add a valid payment method.","title":"Add a Payment Method"},{"location":"AWS_Account/#verify-your-phone-number","text":"Choose your country or region code from the list. Enter a phone number where you can be reached in the next few minutes. Enter the code displayed in the captcha and then submit. In a few moments, an automated system contacts you. Enter the PIN you receive, and then choose Continue.","title":"Verify your phone number"},{"location":"AWS_Account/#choose-an-aws-support-plan","text":"On the Select a Support Plan page, choose one of the available Support plans. For a description of the available Support plans and their benefits, see Compare AWS Support Plans .","title":"Choose an AWS Support plan"},{"location":"AWS_Account/#seting-up-your-budget","text":"You need to set up your budget, in order to avoid any extra charges,. Any extra charges will be aletrted to you before going into action. Please follow the following steps to fix your budget: After you received you registration confirmation, sign in to the console . After a successed login to the console, naviaget to your account name, and choose My Billing Daschboard Choose on the left Budgets which is located under Cost Management, Then Press Craete Budget and choose the Cost budget, then press Set your budget Name the budget, period and budget amount, then press Configure alerts Choose the alert threshold, for example 50% Put your email address to send you alert when your charges become 50% from your budget","title":"Seting up Your Budget"},{"location":"AWS_Account/#watch-it-here","text":"","title":"Watch it here"},{"location":"AWS_Account/#more-resources","text":"","title":"More Resources"},{"location":"AmazonEBS/","text":"","title":"AmazonEBS"},{"location":"EBS/","text":"Amazon EBS volumes \u00b6 An Amazon EBS volume is a durable, block-level storage device that you can attach to your instances. After you attach a volume to an instance, you can use it as you would use a physical hard drive. EBS volumes are flexible. For current-generation volumes attached to current-generation instance types, you can dynamically increase size, modify the provisioned IOPS capacity, and change volume type on live production volumes. You can use EBS volumes as primary storage for data that requires frequent updates, such as the system drive for an instance or storage for a database application. You can also use them for throughput-intensive applications that perform continuous disk scans. EBS volumes persist independently from the running life of an EC2 instance. You can attach multiple EBS volumes to a single instance. The volume and instance must be in the same Availability Zone. Depending on the volume and instance types, you can use Multi-Attach to mount a volume to multiple instances at the same time. Amazon EBS provides the following volume types: General Purpose SSD ( gp2 ), Provisioned IOPS SSD ( io1 ), Throughput Optimized HDD ( st1 ), Cold HDD ( sc1 ), and Magnetic ( standard , a previous-generation type). They differ in performance characteristics and price, allowing you to tailor your storage performance and cost to the needs of your applications. For more information, see Amazon EBS volume types . Your account has a limit on the number of EBS volumes that you can use, and the total storage available to you. For more information about these limits, and how to request an increase in your limits, see Amazon EC2 Service Quotas . What to know befor creating an EBS volume \u00b6 Benefits of using EBS volumes Amazon EBS volume types Constraints on the size and configuration of an EBS volume Creating an Amazon EBS volume \u00b6 You can create an Amazon EBS volume and then attach to any EC2 instance in the same Availability Zone. If you create an encrypted EBS volume, you can only attach it to supported instance types. For more information, see Supported instance types . If you are creating a volume for a high-performance storage scenario, you should make sure to use a Provisioned IOPS SSD (io1) volume and attach it to an instance with enough bandwidth to support your application, such as an EBS-optimized instance or an instance with 10-Gigabit network connectivity. The same advice holds for Throughput Optimized HDD (st1) and Cold HDD (sc1) volumes. For more information, see Amazon EBS\u2013optimized instances . Empty EBS volumes receive their maximum performance the moment that they are available and do not require initialization (formerly known as pre-warming). However, storage blocks on volumes that were created from snapshots must be initialized (pulled down from Amazon S3 and written to the volume) before you can access the block. This preliminary action takes time and can cause a significant increase in the latency of an I/O operation the first time each block is accessed. Volume performance is achieved after all blocks have been downloaded and written to the volume. For most applications, amortizing this cost over the lifetime of the volume is acceptable. To avoid this initial performance hit in a production environment, you can force immediate initialization of the entire volume or enable fast snapshot restore. For more information, see Initializing Amazon EBS volumes . Methods of creating a volume \u00b6 Create and attach EBS volumes when you launch instances by specifying a block device mapping. For more information, see Launching an instance using the Launch Instance Wizard and Block device mapping . Create an empty EBS volume and attach it to a running instance. For more information, see Creating an empty volume below. Create an EBS volume from a previously created snapshot and attach it to a running instance. For more information, see Creating a volume from a snapshot below. Creating an empty volume \u00b6 Empty volumes receive their maximum performance the moment that they are available and do not require initialization . To create a empty EBS volume using the console \u00b6 Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select the Region in which you would like to create your volume. This choice is important because some Amazon EC2 resources can be shared between Regions, while others can\u2019t. For more information, see Resource locations . In the navigation pane, choose ELASTIC BLOCK STORE, Volumes . Choose Create Volume . For Volume Type , choose a volume type. For more information, see Amazon EBS volume types . For Size (GiB) , type the size of the volume. For more information, see Constraints on the size and configuration of an EBS volume . With a Provisioned IOPS SSD volume, for IOPS , type the maximum number of input/output operations per second (IOPS) that the volume should support. For Availability Zone , choose the Availability Zone in which to create the volume. EBS volumes can only be attached to EC2 instances within the same Availability Zone. (Optional) If the instance type supports EBS encryption and you want to encrypt the volume, select Encrypt this volume and choose a CMK . If encryption by default is enabled in this Region, EBS encryption is enabled and the default CMK for EBS encryption is chosen. You can choose a different CMK from Master Key or paste the full ARN of any key that you can access. For more information, see Amazon EBS encryption . (Optional) Choose Create additional tags to add tags to the volume. For each tag, provide a tag key and a tag value. For more information, see Tagging your Amazon EC2 resources . Choose Create Volume . The volume is ready for use when the volume status is Available . To use your new volume, attach it to an instance, format it, and mount it. For more information, see Attaching an Amazon EBS volume to an instance . To create an empty EBS volume using the command line \u00b6 You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2 . create-volume (AWS CLI) New-EC2Volume (AWS Tools for Windows PowerShell) Creating a volume from a snapshot \u00b6 Volumes created from snapshots load lazily in the background. This means that there is no need to wait for all of the data to transfer from Amazon S3 to your EBS volume before the instance can start accessing an attached volume and all its data. If your instance accesses data that hasn\u2019t yet been loaded, the volume immediately downloads the requested data from Amazon S3, and then continues loading the rest of the volume data in the background. Volume performance is achieved after all blocks are downloaded and written to the volume. To avoid the initial performance hit in a production environment, see Initializing Amazon EBS volumes . New EBS volumes that are created from encrypted snapshots are automatically encrypted. You can also encrypt a volume on-the-fly while restoring it from an unencrypted snapshot. Encrypted volumes can only be attached to instance types that support EBS encryption. For more information, see Supported instance types . To create an EBS volume from a snapshot using the console \u00b6 Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select the Region that your snapshot is located in. To use the snapshot to create a volume in a different region, copy your snapshot to the new Region and then use it to create a volume in that Region. For more information, see Copying an Amazon EBS snapshot . In the navigation pane, choose ELASTIC BLOCK STORE, Volumes . Choose Create Volume . For Volume Type , choose a volume type. For more information, see Amazon EBS volume types . For Snapshot ID , start typing the ID or description of the snapshot from which you are restoring the volume, and choose it from the list of suggested options. (Optional) Select Encrypt this volume to change the encryption state of your volume. This is optional if encryption by default is enabled. Select a CMK from Master Key to specify a CMK other than the default CMK for EBS encryption. For Size (GiB) , type the size of the volume, or verify that the default size of the snapshot is adequate. If you specify both a volume size and a snapshot, the size must be equal to or greater than the snapshot size. When you select a volume type and a snapshot, the minimum and maximum sizes for the volume are shown next to Size. For more information, see Constraints on the size and configuration of an EBS volume . With a Provisioned IOPS SSD volume, for IOPS , type the maximum number of input/output operations per second (IOPS) that the volume should support. For Availability Zone , choose the Availability Zone in which to create the volume. EBS volumes can only be attached to EC2 instances in the same Availability Zone. (Optional) Choose Create additional tags to add tags to the volume. For each tag, provide a tag key and a tag value. Choose Create Volume . To use your new volume, attach it to an instance and mount it. For more information, see Attaching an Amazon EBS volume to an instance . If you created a volume that is larger than the snapshot, you must extend the file system on the volume to take advantage of the extra space. For more information, see Amazon EBS Elastic Volumes . To create an EBS volume from a snapshot using the command line \u00b6 You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2 . create-volume (AWS CLI) New-EC2Volume (AWS Tools for Windows PowerShell) Attaching an Amazon EBS volume to an instance \u00b6 More advanced attachment \u00b6 Attaching a volume to multiple instances with Amazon EBS Multi-Attach Making an Amazon EBS volume available for use on Linux \u00b6","title":"Amazon EBS volumes"},{"location":"EBS/#amazon-ebs-volumes","text":"An Amazon EBS volume is a durable, block-level storage device that you can attach to your instances. After you attach a volume to an instance, you can use it as you would use a physical hard drive. EBS volumes are flexible. For current-generation volumes attached to current-generation instance types, you can dynamically increase size, modify the provisioned IOPS capacity, and change volume type on live production volumes. You can use EBS volumes as primary storage for data that requires frequent updates, such as the system drive for an instance or storage for a database application. You can also use them for throughput-intensive applications that perform continuous disk scans. EBS volumes persist independently from the running life of an EC2 instance. You can attach multiple EBS volumes to a single instance. The volume and instance must be in the same Availability Zone. Depending on the volume and instance types, you can use Multi-Attach to mount a volume to multiple instances at the same time. Amazon EBS provides the following volume types: General Purpose SSD ( gp2 ), Provisioned IOPS SSD ( io1 ), Throughput Optimized HDD ( st1 ), Cold HDD ( sc1 ), and Magnetic ( standard , a previous-generation type). They differ in performance characteristics and price, allowing you to tailor your storage performance and cost to the needs of your applications. For more information, see Amazon EBS volume types . Your account has a limit on the number of EBS volumes that you can use, and the total storage available to you. For more information about these limits, and how to request an increase in your limits, see Amazon EC2 Service Quotas .","title":"Amazon EBS volumes"},{"location":"EBS/#what-to-know-befor-creating-an-ebs-volume","text":"Benefits of using EBS volumes Amazon EBS volume types Constraints on the size and configuration of an EBS volume","title":"What to know befor creating an EBS volume"},{"location":"EBS/#creating-an-amazon-ebs-volume","text":"You can create an Amazon EBS volume and then attach to any EC2 instance in the same Availability Zone. If you create an encrypted EBS volume, you can only attach it to supported instance types. For more information, see Supported instance types . If you are creating a volume for a high-performance storage scenario, you should make sure to use a Provisioned IOPS SSD (io1) volume and attach it to an instance with enough bandwidth to support your application, such as an EBS-optimized instance or an instance with 10-Gigabit network connectivity. The same advice holds for Throughput Optimized HDD (st1) and Cold HDD (sc1) volumes. For more information, see Amazon EBS\u2013optimized instances . Empty EBS volumes receive their maximum performance the moment that they are available and do not require initialization (formerly known as pre-warming). However, storage blocks on volumes that were created from snapshots must be initialized (pulled down from Amazon S3 and written to the volume) before you can access the block. This preliminary action takes time and can cause a significant increase in the latency of an I/O operation the first time each block is accessed. Volume performance is achieved after all blocks have been downloaded and written to the volume. For most applications, amortizing this cost over the lifetime of the volume is acceptable. To avoid this initial performance hit in a production environment, you can force immediate initialization of the entire volume or enable fast snapshot restore. For more information, see Initializing Amazon EBS volumes .","title":"Creating an Amazon EBS volume"},{"location":"EBS/#methods-of-creating-a-volume","text":"Create and attach EBS volumes when you launch instances by specifying a block device mapping. For more information, see Launching an instance using the Launch Instance Wizard and Block device mapping . Create an empty EBS volume and attach it to a running instance. For more information, see Creating an empty volume below. Create an EBS volume from a previously created snapshot and attach it to a running instance. For more information, see Creating a volume from a snapshot below.","title":"Methods of creating a volume"},{"location":"EBS/#creating-an-empty-volume","text":"Empty volumes receive their maximum performance the moment that they are available and do not require initialization .","title":"Creating an empty volume"},{"location":"EBS/#to-create-a-empty-ebs-volume-using-the-console","text":"Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select the Region in which you would like to create your volume. This choice is important because some Amazon EC2 resources can be shared between Regions, while others can\u2019t. For more information, see Resource locations . In the navigation pane, choose ELASTIC BLOCK STORE, Volumes . Choose Create Volume . For Volume Type , choose a volume type. For more information, see Amazon EBS volume types . For Size (GiB) , type the size of the volume. For more information, see Constraints on the size and configuration of an EBS volume . With a Provisioned IOPS SSD volume, for IOPS , type the maximum number of input/output operations per second (IOPS) that the volume should support. For Availability Zone , choose the Availability Zone in which to create the volume. EBS volumes can only be attached to EC2 instances within the same Availability Zone. (Optional) If the instance type supports EBS encryption and you want to encrypt the volume, select Encrypt this volume and choose a CMK . If encryption by default is enabled in this Region, EBS encryption is enabled and the default CMK for EBS encryption is chosen. You can choose a different CMK from Master Key or paste the full ARN of any key that you can access. For more information, see Amazon EBS encryption . (Optional) Choose Create additional tags to add tags to the volume. For each tag, provide a tag key and a tag value. For more information, see Tagging your Amazon EC2 resources . Choose Create Volume . The volume is ready for use when the volume status is Available . To use your new volume, attach it to an instance, format it, and mount it. For more information, see Attaching an Amazon EBS volume to an instance .","title":"To create a empty EBS volume using the console"},{"location":"EBS/#to-create-an-empty-ebs-volume-using-the-command-line","text":"You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2 . create-volume (AWS CLI) New-EC2Volume (AWS Tools for Windows PowerShell)","title":"To create an empty EBS volume using the command line"},{"location":"EBS/#creating-a-volume-from-a-snapshot","text":"Volumes created from snapshots load lazily in the background. This means that there is no need to wait for all of the data to transfer from Amazon S3 to your EBS volume before the instance can start accessing an attached volume and all its data. If your instance accesses data that hasn\u2019t yet been loaded, the volume immediately downloads the requested data from Amazon S3, and then continues loading the rest of the volume data in the background. Volume performance is achieved after all blocks are downloaded and written to the volume. To avoid the initial performance hit in a production environment, see Initializing Amazon EBS volumes . New EBS volumes that are created from encrypted snapshots are automatically encrypted. You can also encrypt a volume on-the-fly while restoring it from an unencrypted snapshot. Encrypted volumes can only be attached to instance types that support EBS encryption. For more information, see Supported instance types .","title":"Creating a volume from a snapshot"},{"location":"EBS/#to-create-an-ebs-volume-from-a-snapshot-using-the-console","text":"Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select the Region that your snapshot is located in. To use the snapshot to create a volume in a different region, copy your snapshot to the new Region and then use it to create a volume in that Region. For more information, see Copying an Amazon EBS snapshot . In the navigation pane, choose ELASTIC BLOCK STORE, Volumes . Choose Create Volume . For Volume Type , choose a volume type. For more information, see Amazon EBS volume types . For Snapshot ID , start typing the ID or description of the snapshot from which you are restoring the volume, and choose it from the list of suggested options. (Optional) Select Encrypt this volume to change the encryption state of your volume. This is optional if encryption by default is enabled. Select a CMK from Master Key to specify a CMK other than the default CMK for EBS encryption. For Size (GiB) , type the size of the volume, or verify that the default size of the snapshot is adequate. If you specify both a volume size and a snapshot, the size must be equal to or greater than the snapshot size. When you select a volume type and a snapshot, the minimum and maximum sizes for the volume are shown next to Size. For more information, see Constraints on the size and configuration of an EBS volume . With a Provisioned IOPS SSD volume, for IOPS , type the maximum number of input/output operations per second (IOPS) that the volume should support. For Availability Zone , choose the Availability Zone in which to create the volume. EBS volumes can only be attached to EC2 instances in the same Availability Zone. (Optional) Choose Create additional tags to add tags to the volume. For each tag, provide a tag key and a tag value. Choose Create Volume . To use your new volume, attach it to an instance and mount it. For more information, see Attaching an Amazon EBS volume to an instance . If you created a volume that is larger than the snapshot, you must extend the file system on the volume to take advantage of the extra space. For more information, see Amazon EBS Elastic Volumes .","title":"To create an EBS volume from a snapshot using the console"},{"location":"EBS/#to-create-an-ebs-volume-from-a-snapshot-using-the-command-line","text":"You can use one of the following commands. For more information about these command line interfaces, see Accessing Amazon EC2 . create-volume (AWS CLI) New-EC2Volume (AWS Tools for Windows PowerShell)","title":"To create an EBS volume from a snapshot using the command line"},{"location":"EBS/#attaching-an-amazon-ebs-volume-to-an-instance","text":"","title":"Attaching an Amazon EBS volume to an instance"},{"location":"EBS/#more-advanced-attachment","text":"Attaching a volume to multiple instances with Amazon EBS Multi-Attach","title":"More advanced attachment"},{"location":"EBS/#making-an-amazon-ebs-volume-available-for-use-on-linux","text":"","title":"Making an Amazon EBS volume available for use on Linux"},{"location":"EC2/","text":"Amazon Elastic Compute Cloud (EC2) Instances \u00b6 What is Amazon EC2? \u00b6 Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EC2 enables you to scale up or down to handle changes in requirements or spikes in popularity, reducing your need to forecast traffic. If you would like to know more about Cloud Computing from AWS point of view, see What is Cloud Computing? How to get started with Amazon EC2 \u00b6 First, you need to get set up to use Amazon EC2. After you are set up, you are ready to complete the Getting Started tutorial for Amazon EC2. Whenever you need more information about an Amazon EC2 feature, you can read the technical documentation. You need to get familiar with the follwoing: Instances and AMIs Regions and Availability Zones Instance types Tags Setting up with Amazon EC2 \u00b6 Complete the tasks in this section to get set up for launching an Amazon EC2 instance for the first time: Sign up for AWS Create a key pair Create a security group Sign up for AWS \u00b6 Please follow the instructions in Setting Up an AWS Account . Create a key pair \u00b6 AWS uses public-key cryptography to secure the login information for your instance. A Linux instance has no password; you use a key pair to log in to your instance securely. You specify the name of the key pair when you launch your instance, then provide the private key when you log in using SSH. If you haven\u2019t created a key pair already, you can create one using the Amazon EC2 console. Note that if you plan to launch instances in multiple Regions, you\u2019ll need to create a key pair in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . You can create a key pair using one of the following method: Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . In the navigation pane, choose Key Pairs . Choose Create key pair . For Name , enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces. For File format, choose the format in which to save the private key. To save the private key in a format that can be used with OpenSSH, choose pem . To save the private key in a format that can be used with PuTTY, choose ppk . Choose Create key pair . The private key file is automatically downloaded by your browser. The base file name is the name you specified as the name of your key pair, and the file name extension is determined by the file format you chose. Save the private key file in a safe place. /!\\ Important This is the only chance for you to save the private key file. If you will use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it. chmod 400 my-key-pair.pem If you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file . Watch it here \u00b6 Create a security group \u00b6 Security groups act as a firewall for associated instances, controlling both inbound and outbound traffic at the instance level. You must add rules to a security group that enable you to connect to your instance from your IP address using SSH. You can also add rules that allow inbound and outbound HTTP and HTTPS access from anywhere. Note that if you plan to launch instances in multiple Regions, you\u2019ll need to create a security group in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . Prerequisites \u00b6 You\u2019ll need the public IPv4 address of your local computer. The security group editor in the Amazon EC2 console can automatically detect the public IPv4 address for you. Alternatively, you can use the search phrase \u201cwhat is my IP address\u201d in an Internet browser, or use the following service: Check IP . If you are connecting through an Internet service provider (ISP) or from behind a firewall without a static IP address, you need to find out the range of IP addresses used by client computers. To create a security group with least privilege Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select a Region for the security group. Security groups are specific to a Region, so you should select the same Region in which you created your key pair. In the navigation pane, choose Security Groups . Choose Create security group . In the Basic details section, do the following: a. Enter a name for the new security group and a description. Use a name that is easy for you to remember, such as your user name, followed by SG , plus the Region name. For example, me_SG_uswest2. b. In the VPC list, select your default VPC for the Region. In the Inbound rules section, create the following rules (choose Add rule for each new rule): Choose HTTP from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose HTTPS from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose SSH from the Type list. In the Source box, choose My IP to automatically populate the field with the public IPv4 address of your local computer. Alternatively, choose Custom and specify the public IPv4 address of your computer or network in CIDR notation. To specify an individual IP address in CIDR notation, add the routing suffix /32 , for example, 203.0.113.25/32 . If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24 . /!\\ Warning For security reasons, we don't recommend that you allow SSH access from all IPv4 addresses (0.0.0.0/0) to your instance, except for testing purposes and only for a short time. Choose Create security group . For more information, see Amazon EC2 security groups for Linux instances . Getting started with Amazon EC2 Linux instances \u00b6 When you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier . If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you\u2019ll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle. The instance is an Amazon EBS-backed instance (meaning that the root volume is an EBS (Elastic Block Store) volume). You can either specify the Availability Zone in which your instance runs, or let Amazon EC2 select an Availability Zone for you. When you launch your instance, you secure it by specifying a key pair and security group. When you connect to your instance, you must specify the private key of the key pair that you specified when launching your instance. In ordere to implement the previous configuration, you should proceeed with the following: Launch an instance Connect to your instance Clean up your instance Terminate your instance Next Steps Launch an instance \u00b6 You can launch a Linux instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn\u2019t cover all possible options. For more information about the advanced options, see Launching an Instance . To launch an instance Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the console dashboard, choose Launch Instance . The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select an HVM version of Amazon Linux 2. Notice that these AMIs are marked \u201cFree tier eligible.\u201d On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro instance type, which is selected by default. The t2.micro instance type is eligible for the free tier. In Regions where t2.micro is unavailable, you can use a t3.micro instance under the free tier. For more information, see AWS Free Tier . Choose Review and Launch to let the wizard complete the other configuration settings for you. On the Review Instance Launch page, under Security Groups , you\u2019ll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: a. Choose Edit security groups . b. On the Configure Security Group page, ensure that Select an existing security group is selected. c. Select your security group from the list of existing security groups, and then choose Review and Launch . On the Review Instance Launch page, choose Launch . When prompted for a key pair, select Choose an existing key pair , then select the key pair that you created when getting set up. /!\\ Warning Don't select 'Proceed without a key pair'. If you launch your instance without a key pair, then you 'cannot' connect to it. When you are ready, select the acknowledgement check box, and then choose Launch Instances . A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending . After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose Show/Hide Columns (the gear-shaped icon) in the top right corner of the page and then select Public DNS (IPv4) .) It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column. Connect to your instance \u00b6 There are several ways to connect to your Linux instance. For more information, see Connect to your Linux instance . /!\\ Important You can\u2019t connect to your instance unless you launched it with a key pair for which you have the .pem file and you launched it with a security group that allows SSH access from your computer. If you can\u2019t connect to your instance, see Troubleshooting connecting to your instance for assistance. Clean up your instance \u00b6 After you\u2019ve finished with the instance that you created for this tutorial, you should clean up by terminating the instance. If you want to do more with this instance before you clean up, see Next steps . /!\\ Important Terminating an instance effectively deletes it; you can\u2019t reconnect to an instance after you\u2019ve terminated it. Terminate your instance \u00b6 If you launched an instance that is not within the AWS Free Tier , you\u2019ll stop incurring charges for that instance as soon as the instance status changes to shutting down or terminated . If you\u2019d like to keep your instance for later, but not incur charges, you can stop the instance now and then start it again later. For more information, see Stopping Instances . To terminate your instance In the navigation pane, choose Instances . In the list of instances, select the instance. Choose Actions, Instance State, Terminate . Choose Yes, Terminate when prompted for confirmation. Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted. Next Steps \u00b6 After you start your instance, you might want to try some of the following exercises: Learn how to remotely manage your EC2 instance using Run Command. For more information, see AWS Systems Manager Run Command in the AWS Systems Manager User Guide. Configure a CloudWatch alarm to notify you if your usage exceeds the Free Tier. For more information, see Create a Billing Alarm in the AWS Billing and Cost Management User Guide. Watch it here \u00b6 Connecting to your Linux EC2 Instances \u00b6 Connect to the Linux instances that you launched and transfer files between your local computer and your instance. The operating system of your local computer determines the options that you have to connect from your local computer to your Linux instance. Connection options \u00b6 If your local computer operating system is Linux or macOS X , you can connect by using one pf the following: SSH Client EC2 Instance Connect AWS Systems Manager Session Manager If your local computer operating system is Windows , you can connect by using one pf the following: PuTTY SSH Client AWS Systems Manager Session Manager Windows Subsystem for Linux Connecting to your Linux instance using SSH \u00b6 After you launch your instance, you can connect to it and use it the way that you\u2019d use a computer sitting in front of you. Prerequisites \u00b6 Before you connect to your Linux instance, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install an SSH client on your local computer (either Linux or Windows) as needed Your local computer might have an SSH client installed by default. You can verify this by typing ssh at the command line. If your compute doesn\u2019t recognize the command, you can install an SSH client. Recent versions of Windows Server 2019 and Windows 10 - OpenSSH is included as an installable component. For information, see OpenSSH in Windows . Earlier versions of Windows - Download and install OpenSSH. For more information, see Win32-OpenSSH . Linux and macOS X - Download and install OpenSSH. For more information, see Linux-openssh . Connect to your Linux instance using an SSH client \u00b6 Use the following procedure to connect to your Linux instance using an SSH client. If you receive an error while attempting to connect to your instance, see Troubleshooting connecting to your instance . To connect to your instance using SSH In a terminal window, use the ssh command to connect to the instance. You specify the path and file name of the private key ( .pem ), the user name for your instance, and the public DNS name or IPv6 address for your instance. For more information about how to find the private key, the user name for your instance, and the DNS name or IPv6 address for an instance, see Locate the private key and Get information about your instance . To connect to your instance, use one of the following commands. a. (Public DNS) To connect using your instance\u2019s public DNS name, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name b. (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance\u2019s IPv6 address, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-IPv6-address You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (198-51-100-1)' can't be established. ECDSA key fingerprint is l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY. Are you sure you want to continue connecting (yes/no)? Enter yes . You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (ECDSA) to the list of known hosts. Connecting to your Linux instance from Windows using PuTTY or MobaXterm \u00b6 After you launch your instance, you can connect to it and use it the way that you\u2019d use a computer sitting in front of you. The following instructions explain how to connect to your instance using PuTTY, and MobaXterm, free SSH client for Windows. If you receive an error while attempting to connect to your instance, see General prerequisites for connecting to your instance . Prerequisites \u00b6 Before you connect to your Linux instance using PuTTY, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install PuTTY on your local computer Download and install PuTTY from the PuTTY download page . If you already have an older version of PuTTY installed, we recommend that you download the latest version. Be sure to install the entire suite. Or Install MobaXterm on your local computer Download and install MobaXterm from the MobaXterm download page . Convert your private key using PuTTYgen In case you do not have a .ppk , locate the private key ( .pem file) for the key pair that you specified when you launched the instance. Convert the .pem file to a .ppk file for use with PuTTY. For more information, follow the steps in the next subsection. Convert your private key using PuTTYgen \u00b6 PuTTY does not natively support the private key format for SSH keys. PuTTY provides a tool named PuTTYgen, which converts keys to the required format for PuTTY. You must convert your private key ( .pem file) into this format ( .ppk file) as follows in order to connect to your instance using PuTTY. To convert your private key From the Start menu, choose All Programs, PuTTY, PuTTYgen . Under Type of key to generate , choose RSA . If you\u2019re using an older version of PuTTYgen, choose SSH-2 RSA . Choose Load . By default, PuTTYgen displays only files with the extension .ppk . To locate your .pem file, choose the option to display files of all types. Select all file types Select your .pem file for the key pair that you specified when you launched your instance and choose Open . PuTTYgen displays a notice that the .pem file was successfully imported. Choose OK . To save the key in the format that PuTTY can use, choose Save private key . PuTTYgen displays a warning about saving the key without a passphrase. Choose Yes . /!\\ Note A passphrase on a private key is an extra layer of protection. Even if your private key is discovered, it can't be used without the passphrase. The downside to using a passphrase is that it makes automation harder because human intervention is needed to log on to an instance, or to copy files to an instance. Specify the same name for the key that you used for the key pair (for example, my-key-pair ) and choose Save . PuTTY automatically adds the .ppk file extension. Your private key is now in the correct format for use with PuTTY. You can now connect to your instance using PuTTY\u2019s SSH client. Connecting to your Linux instance \u00b6 Use the following procedure to connect to your Linux instance using PuTTY. You need the .ppk file that you created for your private key. For more information, see Convert your private key using PuTTYgen in the preceding section. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . To connect to your instance using PuTTY Start PuTTY (from the Start menu, choose All Programs, PuTTY, PuTTY ). In the Category pane , choose Session and complete the following fields: a. In the Host Name box, do one of the following: (Public DNS) To connect using your instance\u2019s public DNS name, enter my-instance-user-name@my-instance-public-dns-name . (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance\u2019s IPv6 address, enter my-instance-user-name@my-instance-IPv6-address . For information about how to get the user name for your instance, and the public DNS name or IPv6 address of your instance, see Get information about your instance . b. Ensure that the Port value is 22. c. Under Connection type , select SSH . (Optional) You can configure PuTTY to automatically send \u2018keepalive\u2019 data at regular intervals to keep the session active. This is useful to avoid disconnecting from your instance due to session inactivity. In the Category pane, choose Connection , and then enter the required interval in the Seconds between keepalives field. For example, if your session disconnects after 10 minutes of inactivity, enter 180 to configure PuTTY to send keepalive data every 3 minutes. In the Category pane, expand Connection , expand SSH , and then choose Auth . Complete the following: a. Choose Browse . b. Select the .ppk file that you generated for your key pair and choose Open . c. (Optional) If you plan to start this session again later, you can save the session information for future use. Under Category , choose Session , enter a name for the session in Saved Sessions , and then choose Save . d. Choose Open . If this is the first time you have connected to this instance, PuTTY displays a security alert dialog box that asks whether you trust the host to which you are connecting. a. Choose Yes . A window opens and you are connected to your instance. /!\\ Note If you specified a passphrase when you converted your private key to PuTTY\u2019s format, you must provide that passphrase when you log in to the instance. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . Transferring files to Linux instances \u00b6 Transferring files to your Linux instances depends on the type of the operating system you use to connect to the instance . Therfore: If you connect through Linux Two ways to transfer files between your local computer and a Linux instance are to use: The secure copy protocol (SCP) . FileZilla . If you connect through Windwos Many options are exist to transfer files between the instances and local machines, such as: The PuTTY Secure Copy client (PSCP) . WinSCP . FileZilla . Transferring files to Linux instances from Linux using SCP \u00b6 One way to transfer files between your local computer and a Linux instance is to use the secure copy protocol (SCP). This section describes how to transfer files with SCP. The procedure is similar to the procedure for connecting to an instance with SSH. Prerequisites \u00b6 Verify the general prerequisites for transferring files to your instance. The general prerequisites for transferring files to an instance are the same as the general prerequisites for connecting to an instance. For more information, see General prerequisites for connecting to your instance . Install an SCP client Most Linux, Unix, and Apple computers include an SCP client by default. If yours doesn\u2019t, the OpenSSH project provides a free implementation of the full suite of SSH tools, including an SCP client. For more information, see http://www.openssh.org . Use SCP to transfer a file \u00b6 Transfer a file to your instance using the instance\u2019s public DNS name, or the IPv6 address if your instance has one. For example , if the name of your private key file is my-key-pair , the file to transfer is SampleFile.txt , the user name for your instance is my-instance-user-name , and the public DNS name of the instance is my-instance-public-dns-name , or my-instance-IPv6-address if your instance has an IPv6 address, use one of the following commands to copy the file to the my-instance-user-name home directory. (Public DNS) To transfer a file to your instance using your instance\u2019s public DNS name, enter the following command. scp -i /path/my-key-pair.pem /path/SampleFile.txt my-instance-user-name@my-instance-public-dns-name:~ (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using the instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (). scp -i /path/my-key-pair.pem /path/SampleFile.txt my-instance-user-name@\\[my-instance-IPv6-address\\]:~ You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (10.254.142.33)' can't be established. RSA key fingerprint is 1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f. Are you sure you want to continue connecting (yes/no)? Enter yes You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (RSA) to the list of known hosts. Sending file modes: C0644 20 SampleFile.txt Sink: C0644 20 SampleFile.txt SampleFile.txt 100% 20 0.0KB/s 00:00 If you receive a \u201cbash: scp: command not found\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp : [ec2-user ~]$ sudo yum install -y openssh-clients To transfer files in the other direction (from your Amazon EC2 instance to your local computer), reverse the order of the host parameters. For example, to transfer the SampleFile.txt file from your EC2 instance back to the home directory on your local computer as SampleFile2.txt , use of the following commands on your local computer. (Public DNS) To transfer a file to your instance using your instance\u2019s public DNS name, enter the following command. scp -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name:~/SampleFile.txt ~/SampleFile2.txt (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using the instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (). scp -i /path/my-key-pair.pem my-instance-user-name@\\[my-instance-IPv6-address\\]:~/SampleFile.txt ~/SampleFile2.txt Transferring files to your Linux instance using the PuTTY Secure Copy client \u00b6 The PuTTY Secure Copy client (PSCP) is a command line tool that you can use to transfer files between your Windows computer and your Linux instance. If you prefer a graphical user interface (GUI), you can use an open source GUI tool named WinSCP. For more information, see Transferring files to your Linux instance using WinSCP or FileZilla . To use PSCP, you need the private key you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance, or the IPv6 address if your instance has one. The following example transfers the file Sample_file.txt from the C:\\ drive on a Windows computer to the my-instance-user-name home directory on an Amazon Linux instance. To transfer a file, use one of the following commands. (Public DNS) To transfer a file using your instance\u2019s public DNS name, enter the following command. pscp -i C:\\path\\my-key-pair.ppk C:\\path\\Sample_file.txt my-instance-user-name@my-instance-public-dns-name:/home/my-instance-user-name/Sample_file.txt (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using your instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]). pscp -i C:\\path\\my-key-pair.ppk C:\\path\\Sample_file.txt my-instance-user-name@[my-instance-IPv6-address]:/home/my-instance-user-name/Sample_file.txt Transferring files to your Linux instance using WinSCP \u00b6 WinSCP is a GUI-based file manager for Windows that allows you to upload and transfer files to a remote computer using the SFTP, SCP, FTP, and FTPS protocols. WinSCP allows you to drag and drop files from your Windows computer to your Linux instance or synchronize entire directory structures between the two systems. To use WinSCP, you need the private key that you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance. Prerequisites \u00b6 Download and install WinSCP from http://winscp.net/eng/download.php . For most users, the default installation options are OK. Start WinSCP. Configuration \u00b6 At the WinSCP login screen, for Host name , enter one of the following: (Public DNS or IPv4 address) To log in using your instance\u2019s public DNS name or public IPv4 address, enter the public DNS name or public IPv4 address for your instance. (IPv6) Alternatively, if your instance has an IPv6 address, to log in using your instance\u2019s IPv6 address, enter the IPv6 address for your instance. For User name, enter the default user name for your AMI. For Amazon Linux 2 or the Amazon Linux AMI , the user name is ec2-user . For a CentOS AMI , the user name is centos . For a Debian AMI , the user name is admin . For a Fedora AMI , the user name is ec2-user or fedora . For a RHEL AMI , the user name is ec2-user or root . For a SUSE AMI , the user name is ec2-user or root . For an Ubuntu AMI , the user name is ubuntu . Otherwise, if ec2-user and root don\u2019t work, check with the AMI provider. Specify the private key for your instance. For Private key , enter the path to your private key, or choose the \u201c \u2026 \u201d button to browse for the file. To open the advanced site settings, for newer versions of WinSCP, choose Advanced . To find the Private key file setting, under SSH , choose Authentication . Here is a screenshot from WinSCP version 5.9.4: WinSCP requires a PuTTY private key file (.ppk). You can convert a .pem security key file to the .ppk format using PuTTYgen. For more information, see (Convert your private key using PuTTYgen)[#convert-your-private-key-using-puttygen]. Connect and start transfering files \u00b6 Choose Login . To add the host fingerprint to the host cache, choose Yes . After the connection is established, in the connection window your Linux instance is on the right and your local machine is on the left. You can drag and drop files directly into the remote file system from your local machine. For more information on WinSCP, see the project documentation at http://winscp.net/eng/docs/start . If you receive a \u201cCannot execute SCP to start transfer\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp . [ec2-user ~]$ sudo yum install -y openssh-clients Watch it here \u00b6 Transferring files to your Linux instance using FileZilla \u00b6 FileZilla is a free software, cross-platform FTP application, consisting of FileZilla Client and FileZilla Server. Client binaries are available for Windows, Linux, and macOS, server binaries are available for Windows only. Both server and client support FTP and FTPS (FTP over SSL/TLS), while the client can in addition connect to SFTP servers. To use FileZilla, you need the private key that you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance. Prerequisites \u00b6 Download and install FileZilla from https://filezilla-project.org/download.php for Windows or Linux (Choose your flavor). For most users, the default installation options are OK. Start FileZilla. Configuration \u00b6 Edit (Preferences) > Settings > Connection > SFTP, Click Add key file Browse to the location of your .pem file and select it. A message box will appear asking your permission to convert the file into .ppk format. Click Yes , then give the file a name and store it somewhere. If you already convert the key by PuTTYgen , just browse the .ppk instead. If the new file is shown in the list of Keyfiles , then continue to the next step. If not, then click Add keyfile\u2026 and select the converted file. From File menu choose Site Manager , and choose Add a new site At the FileZilla Site Manager screen, for Host name , enter one of the following: (Public DNS or IPv4 address) To log in using your instance\u2019s public DNS name or public IPv4 address, enter the public DNS name or public IPv4 address for your instance. (IPv6) Alternatively, if your instance has an IPv6 address, to log in using your instance\u2019s IPv6 address, enter the IPv6 address for your instance. For the Protocol choose SFTP For the Login Type choose Normal For User name, enter the default user name for your AMI. For Amazon Linux 2 or the Amazon Linux AMI , the user name is ec2-user . For a CentOS AMI , the user name is centos . For a Debian AMI , the user name is admin . For a Fedora AMI , the user name is ec2-user or fedora . For a RHEL AMI , the user name is ec2-user or root . For a SUSE AMI , the user name is ec2-user or root . For an Ubuntu AMI , the user name is ubuntu . Otherwise, if ec2-user and root don\u2019t work, check with the AMI provider. Here is a screenshot from FileZilla version 3.49.1: Connect and start transfering files \u00b6 Choose Connect . To add the host fingerprint to the Site Manager . After the connection is established, in the connection window your Linux instance is on the right and your local machine is on the left. You can drag and drop files directly into the remote file system from your local machine. For more information on FileZilla, see the project documentation at https://wiki.filezilla-project.org/Documentation . If you receive a \u201cCannot execute SCP to start transfer\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp . [ec2-user ~]$ sudo yum install -y openssh-clients Watch it here \u00b6 Getting started with Amazon EC2 Windows Instances \u00b6 To get started with a Windows instance, see Getting started with Amazon EC2 Windows instances . Connecting to your Windows instance \u00b6 To connect to a Windows instance, see Connecting to Your Windows Instance in the Amazon EC2 User Guide for Windows Instances. Transfer files to Windows instances \u00b6 To transfer files to and from a Windows instance, see Transfer files to Windows instances in the Amazon EC2 User Guide for Windows Instances.","title":"Using EC2 Compute Instances"},{"location":"EC2/#amazon-elastic-compute-cloud-ec2-instances","text":"","title":"Amazon Elastic Compute Cloud (EC2) Instances"},{"location":"EC2/#what-is-amazon-ec2","text":"Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EC2 enables you to scale up or down to handle changes in requirements or spikes in popularity, reducing your need to forecast traffic. If you would like to know more about Cloud Computing from AWS point of view, see What is Cloud Computing?","title":"What is Amazon EC2?"},{"location":"EC2/#how-to-get-started-with-amazon-ec2","text":"First, you need to get set up to use Amazon EC2. After you are set up, you are ready to complete the Getting Started tutorial for Amazon EC2. Whenever you need more information about an Amazon EC2 feature, you can read the technical documentation. You need to get familiar with the follwoing: Instances and AMIs Regions and Availability Zones Instance types Tags","title":"How to get started with Amazon EC2"},{"location":"EC2/#setting-up-with-amazon-ec2","text":"Complete the tasks in this section to get set up for launching an Amazon EC2 instance for the first time: Sign up for AWS Create a key pair Create a security group","title":"Setting up with Amazon EC2"},{"location":"EC2/#sign-up-for-aws","text":"Please follow the instructions in Setting Up an AWS Account .","title":"Sign up for AWS"},{"location":"EC2/#create-a-key-pair","text":"AWS uses public-key cryptography to secure the login information for your instance. A Linux instance has no password; you use a key pair to log in to your instance securely. You specify the name of the key pair when you launch your instance, then provide the private key when you log in using SSH. If you haven\u2019t created a key pair already, you can create one using the Amazon EC2 console. Note that if you plan to launch instances in multiple Regions, you\u2019ll need to create a key pair in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . You can create a key pair using one of the following method: Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . In the navigation pane, choose Key Pairs . Choose Create key pair . For Name , enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces. For File format, choose the format in which to save the private key. To save the private key in a format that can be used with OpenSSH, choose pem . To save the private key in a format that can be used with PuTTY, choose ppk . Choose Create key pair . The private key file is automatically downloaded by your browser. The base file name is the name you specified as the name of your key pair, and the file name extension is determined by the file format you chose. Save the private key file in a safe place. /!\\ Important This is the only chance for you to save the private key file. If you will use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it. chmod 400 my-key-pair.pem If you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file .","title":"Create a key pair"},{"location":"EC2/#watch-it-here","text":"","title":"Watch it here"},{"location":"EC2/#create-a-security-group","text":"Security groups act as a firewall for associated instances, controlling both inbound and outbound traffic at the instance level. You must add rules to a security group that enable you to connect to your instance from your IP address using SSH. You can also add rules that allow inbound and outbound HTTP and HTTPS access from anywhere. Note that if you plan to launch instances in multiple Regions, you\u2019ll need to create a security group in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones .","title":"Create a security group"},{"location":"EC2/#prerequisites","text":"You\u2019ll need the public IPv4 address of your local computer. The security group editor in the Amazon EC2 console can automatically detect the public IPv4 address for you. Alternatively, you can use the search phrase \u201cwhat is my IP address\u201d in an Internet browser, or use the following service: Check IP . If you are connecting through an Internet service provider (ISP) or from behind a firewall without a static IP address, you need to find out the range of IP addresses used by client computers. To create a security group with least privilege Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select a Region for the security group. Security groups are specific to a Region, so you should select the same Region in which you created your key pair. In the navigation pane, choose Security Groups . Choose Create security group . In the Basic details section, do the following: a. Enter a name for the new security group and a description. Use a name that is easy for you to remember, such as your user name, followed by SG , plus the Region name. For example, me_SG_uswest2. b. In the VPC list, select your default VPC for the Region. In the Inbound rules section, create the following rules (choose Add rule for each new rule): Choose HTTP from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose HTTPS from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose SSH from the Type list. In the Source box, choose My IP to automatically populate the field with the public IPv4 address of your local computer. Alternatively, choose Custom and specify the public IPv4 address of your computer or network in CIDR notation. To specify an individual IP address in CIDR notation, add the routing suffix /32 , for example, 203.0.113.25/32 . If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24 . /!\\ Warning For security reasons, we don't recommend that you allow SSH access from all IPv4 addresses (0.0.0.0/0) to your instance, except for testing purposes and only for a short time. Choose Create security group . For more information, see Amazon EC2 security groups for Linux instances .","title":"Prerequisites"},{"location":"EC2/#getting-started-with-amazon-ec2-linux-instances","text":"When you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier . If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you\u2019ll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle. The instance is an Amazon EBS-backed instance (meaning that the root volume is an EBS (Elastic Block Store) volume). You can either specify the Availability Zone in which your instance runs, or let Amazon EC2 select an Availability Zone for you. When you launch your instance, you secure it by specifying a key pair and security group. When you connect to your instance, you must specify the private key of the key pair that you specified when launching your instance. In ordere to implement the previous configuration, you should proceeed with the following: Launch an instance Connect to your instance Clean up your instance Terminate your instance Next Steps","title":"Getting started with Amazon EC2 Linux instances"},{"location":"EC2/#launch-an-instance","text":"You can launch a Linux instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn\u2019t cover all possible options. For more information about the advanced options, see Launching an Instance . To launch an instance Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the console dashboard, choose Launch Instance . The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select an HVM version of Amazon Linux 2. Notice that these AMIs are marked \u201cFree tier eligible.\u201d On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro instance type, which is selected by default. The t2.micro instance type is eligible for the free tier. In Regions where t2.micro is unavailable, you can use a t3.micro instance under the free tier. For more information, see AWS Free Tier . Choose Review and Launch to let the wizard complete the other configuration settings for you. On the Review Instance Launch page, under Security Groups , you\u2019ll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: a. Choose Edit security groups . b. On the Configure Security Group page, ensure that Select an existing security group is selected. c. Select your security group from the list of existing security groups, and then choose Review and Launch . On the Review Instance Launch page, choose Launch . When prompted for a key pair, select Choose an existing key pair , then select the key pair that you created when getting set up. /!\\ Warning Don't select 'Proceed without a key pair'. If you launch your instance without a key pair, then you 'cannot' connect to it. When you are ready, select the acknowledgement check box, and then choose Launch Instances . A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending . After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose Show/Hide Columns (the gear-shaped icon) in the top right corner of the page and then select Public DNS (IPv4) .) It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column.","title":"Launch an instance"},{"location":"EC2/#connect-to-your-instance","text":"There are several ways to connect to your Linux instance. For more information, see Connect to your Linux instance . /!\\ Important You can\u2019t connect to your instance unless you launched it with a key pair for which you have the .pem file and you launched it with a security group that allows SSH access from your computer. If you can\u2019t connect to your instance, see Troubleshooting connecting to your instance for assistance.","title":"Connect to your instance"},{"location":"EC2/#clean-up-your-instance","text":"After you\u2019ve finished with the instance that you created for this tutorial, you should clean up by terminating the instance. If you want to do more with this instance before you clean up, see Next steps . /!\\ Important Terminating an instance effectively deletes it; you can\u2019t reconnect to an instance after you\u2019ve terminated it.","title":"Clean up your instance"},{"location":"EC2/#terminate-your-instance","text":"If you launched an instance that is not within the AWS Free Tier , you\u2019ll stop incurring charges for that instance as soon as the instance status changes to shutting down or terminated . If you\u2019d like to keep your instance for later, but not incur charges, you can stop the instance now and then start it again later. For more information, see Stopping Instances . To terminate your instance In the navigation pane, choose Instances . In the list of instances, select the instance. Choose Actions, Instance State, Terminate . Choose Yes, Terminate when prompted for confirmation. Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted.","title":"Terminate your instance"},{"location":"EC2/#next-steps","text":"After you start your instance, you might want to try some of the following exercises: Learn how to remotely manage your EC2 instance using Run Command. For more information, see AWS Systems Manager Run Command in the AWS Systems Manager User Guide. Configure a CloudWatch alarm to notify you if your usage exceeds the Free Tier. For more information, see Create a Billing Alarm in the AWS Billing and Cost Management User Guide.","title":"Next Steps"},{"location":"EC2/#watch-it-here_1","text":"","title":"Watch it here"},{"location":"EC2/#connecting-to-your-linux-ec2-instances","text":"Connect to the Linux instances that you launched and transfer files between your local computer and your instance. The operating system of your local computer determines the options that you have to connect from your local computer to your Linux instance.","title":"Connecting to your Linux EC2 Instances"},{"location":"EC2/#connection-options","text":"If your local computer operating system is Linux or macOS X , you can connect by using one pf the following: SSH Client EC2 Instance Connect AWS Systems Manager Session Manager If your local computer operating system is Windows , you can connect by using one pf the following: PuTTY SSH Client AWS Systems Manager Session Manager Windows Subsystem for Linux","title":"Connection options"},{"location":"EC2/#connecting-to-your-linux-instance-using-ssh","text":"After you launch your instance, you can connect to it and use it the way that you\u2019d use a computer sitting in front of you.","title":"Connecting to your Linux instance using SSH"},{"location":"EC2/#prerequisites_1","text":"Before you connect to your Linux instance, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install an SSH client on your local computer (either Linux or Windows) as needed Your local computer might have an SSH client installed by default. You can verify this by typing ssh at the command line. If your compute doesn\u2019t recognize the command, you can install an SSH client. Recent versions of Windows Server 2019 and Windows 10 - OpenSSH is included as an installable component. For information, see OpenSSH in Windows . Earlier versions of Windows - Download and install OpenSSH. For more information, see Win32-OpenSSH . Linux and macOS X - Download and install OpenSSH. For more information, see Linux-openssh .","title":"Prerequisites"},{"location":"EC2/#connect-to-your-linux-instance-using-an-ssh-client","text":"Use the following procedure to connect to your Linux instance using an SSH client. If you receive an error while attempting to connect to your instance, see Troubleshooting connecting to your instance . To connect to your instance using SSH In a terminal window, use the ssh command to connect to the instance. You specify the path and file name of the private key ( .pem ), the user name for your instance, and the public DNS name or IPv6 address for your instance. For more information about how to find the private key, the user name for your instance, and the DNS name or IPv6 address for an instance, see Locate the private key and Get information about your instance . To connect to your instance, use one of the following commands. a. (Public DNS) To connect using your instance\u2019s public DNS name, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name b. (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance\u2019s IPv6 address, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-IPv6-address You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (198-51-100-1)' can't be established. ECDSA key fingerprint is l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY. Are you sure you want to continue connecting (yes/no)? Enter yes . You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (ECDSA) to the list of known hosts.","title":"Connect to your Linux instance using an SSH client"},{"location":"EC2/#connecting-to-your-linux-instance-from-windows-using-putty-or-mobaxterm","text":"After you launch your instance, you can connect to it and use it the way that you\u2019d use a computer sitting in front of you. The following instructions explain how to connect to your instance using PuTTY, and MobaXterm, free SSH client for Windows. If you receive an error while attempting to connect to your instance, see General prerequisites for connecting to your instance .","title":"Connecting to your Linux instance from Windows using PuTTY or MobaXterm"},{"location":"EC2/#prerequisites_2","text":"Before you connect to your Linux instance using PuTTY, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install PuTTY on your local computer Download and install PuTTY from the PuTTY download page . If you already have an older version of PuTTY installed, we recommend that you download the latest version. Be sure to install the entire suite. Or Install MobaXterm on your local computer Download and install MobaXterm from the MobaXterm download page . Convert your private key using PuTTYgen In case you do not have a .ppk , locate the private key ( .pem file) for the key pair that you specified when you launched the instance. Convert the .pem file to a .ppk file for use with PuTTY. For more information, follow the steps in the next subsection.","title":"Prerequisites"},{"location":"EC2/#convert-your-private-key-using-puttygen","text":"PuTTY does not natively support the private key format for SSH keys. PuTTY provides a tool named PuTTYgen, which converts keys to the required format for PuTTY. You must convert your private key ( .pem file) into this format ( .ppk file) as follows in order to connect to your instance using PuTTY. To convert your private key From the Start menu, choose All Programs, PuTTY, PuTTYgen . Under Type of key to generate , choose RSA . If you\u2019re using an older version of PuTTYgen, choose SSH-2 RSA . Choose Load . By default, PuTTYgen displays only files with the extension .ppk . To locate your .pem file, choose the option to display files of all types. Select all file types Select your .pem file for the key pair that you specified when you launched your instance and choose Open . PuTTYgen displays a notice that the .pem file was successfully imported. Choose OK . To save the key in the format that PuTTY can use, choose Save private key . PuTTYgen displays a warning about saving the key without a passphrase. Choose Yes . /!\\ Note A passphrase on a private key is an extra layer of protection. Even if your private key is discovered, it can't be used without the passphrase. The downside to using a passphrase is that it makes automation harder because human intervention is needed to log on to an instance, or to copy files to an instance. Specify the same name for the key that you used for the key pair (for example, my-key-pair ) and choose Save . PuTTY automatically adds the .ppk file extension. Your private key is now in the correct format for use with PuTTY. You can now connect to your instance using PuTTY\u2019s SSH client.","title":"Convert your private key using PuTTYgen"},{"location":"EC2/#connecting-to-your-linux-instance","text":"Use the following procedure to connect to your Linux instance using PuTTY. You need the .ppk file that you created for your private key. For more information, see Convert your private key using PuTTYgen in the preceding section. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . To connect to your instance using PuTTY Start PuTTY (from the Start menu, choose All Programs, PuTTY, PuTTY ). In the Category pane , choose Session and complete the following fields: a. In the Host Name box, do one of the following: (Public DNS) To connect using your instance\u2019s public DNS name, enter my-instance-user-name@my-instance-public-dns-name . (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance\u2019s IPv6 address, enter my-instance-user-name@my-instance-IPv6-address . For information about how to get the user name for your instance, and the public DNS name or IPv6 address of your instance, see Get information about your instance . b. Ensure that the Port value is 22. c. Under Connection type , select SSH . (Optional) You can configure PuTTY to automatically send \u2018keepalive\u2019 data at regular intervals to keep the session active. This is useful to avoid disconnecting from your instance due to session inactivity. In the Category pane, choose Connection , and then enter the required interval in the Seconds between keepalives field. For example, if your session disconnects after 10 minutes of inactivity, enter 180 to configure PuTTY to send keepalive data every 3 minutes. In the Category pane, expand Connection , expand SSH , and then choose Auth . Complete the following: a. Choose Browse . b. Select the .ppk file that you generated for your key pair and choose Open . c. (Optional) If you plan to start this session again later, you can save the session information for future use. Under Category , choose Session , enter a name for the session in Saved Sessions , and then choose Save . d. Choose Open . If this is the first time you have connected to this instance, PuTTY displays a security alert dialog box that asks whether you trust the host to which you are connecting. a. Choose Yes . A window opens and you are connected to your instance. /!\\ Note If you specified a passphrase when you converted your private key to PuTTY\u2019s format, you must provide that passphrase when you log in to the instance. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance .","title":"Connecting to your Linux instance"},{"location":"EC2/#transferring-files-to-linux-instances","text":"Transferring files to your Linux instances depends on the type of the operating system you use to connect to the instance . Therfore: If you connect through Linux Two ways to transfer files between your local computer and a Linux instance are to use: The secure copy protocol (SCP) . FileZilla . If you connect through Windwos Many options are exist to transfer files between the instances and local machines, such as: The PuTTY Secure Copy client (PSCP) . WinSCP . FileZilla .","title":"Transferring files to Linux instances"},{"location":"EC2/#transferring-files-to-linux-instances-from-linux-using-scp","text":"One way to transfer files between your local computer and a Linux instance is to use the secure copy protocol (SCP). This section describes how to transfer files with SCP. The procedure is similar to the procedure for connecting to an instance with SSH.","title":"Transferring files to Linux instances from Linux using SCP"},{"location":"EC2/#prerequisites_3","text":"Verify the general prerequisites for transferring files to your instance. The general prerequisites for transferring files to an instance are the same as the general prerequisites for connecting to an instance. For more information, see General prerequisites for connecting to your instance . Install an SCP client Most Linux, Unix, and Apple computers include an SCP client by default. If yours doesn\u2019t, the OpenSSH project provides a free implementation of the full suite of SSH tools, including an SCP client. For more information, see http://www.openssh.org .","title":"Prerequisites"},{"location":"EC2/#use-scp-to-transfer-a-file","text":"Transfer a file to your instance using the instance\u2019s public DNS name, or the IPv6 address if your instance has one. For example , if the name of your private key file is my-key-pair , the file to transfer is SampleFile.txt , the user name for your instance is my-instance-user-name , and the public DNS name of the instance is my-instance-public-dns-name , or my-instance-IPv6-address if your instance has an IPv6 address, use one of the following commands to copy the file to the my-instance-user-name home directory. (Public DNS) To transfer a file to your instance using your instance\u2019s public DNS name, enter the following command. scp -i /path/my-key-pair.pem /path/SampleFile.txt my-instance-user-name@my-instance-public-dns-name:~ (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using the instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (). scp -i /path/my-key-pair.pem /path/SampleFile.txt my-instance-user-name@\\[my-instance-IPv6-address\\]:~ You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (10.254.142.33)' can't be established. RSA key fingerprint is 1f:51:ae:28:bf:89:e9:d8:1f:25:5d:37:2d:7d:b8:ca:9f:f5:f1:6f. Are you sure you want to continue connecting (yes/no)? Enter yes You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (RSA) to the list of known hosts. Sending file modes: C0644 20 SampleFile.txt Sink: C0644 20 SampleFile.txt SampleFile.txt 100% 20 0.0KB/s 00:00 If you receive a \u201cbash: scp: command not found\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp : [ec2-user ~]$ sudo yum install -y openssh-clients To transfer files in the other direction (from your Amazon EC2 instance to your local computer), reverse the order of the host parameters. For example, to transfer the SampleFile.txt file from your EC2 instance back to the home directory on your local computer as SampleFile2.txt , use of the following commands on your local computer. (Public DNS) To transfer a file to your instance using your instance\u2019s public DNS name, enter the following command. scp -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name:~/SampleFile.txt ~/SampleFile2.txt (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using the instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]), which must be escaped (). scp -i /path/my-key-pair.pem my-instance-user-name@\\[my-instance-IPv6-address\\]:~/SampleFile.txt ~/SampleFile2.txt","title":"Use SCP to transfer a file"},{"location":"EC2/#transferring-files-to-your-linux-instance-using-the-putty-secure-copy-client","text":"The PuTTY Secure Copy client (PSCP) is a command line tool that you can use to transfer files between your Windows computer and your Linux instance. If you prefer a graphical user interface (GUI), you can use an open source GUI tool named WinSCP. For more information, see Transferring files to your Linux instance using WinSCP or FileZilla . To use PSCP, you need the private key you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance, or the IPv6 address if your instance has one. The following example transfers the file Sample_file.txt from the C:\\ drive on a Windows computer to the my-instance-user-name home directory on an Amazon Linux instance. To transfer a file, use one of the following commands. (Public DNS) To transfer a file using your instance\u2019s public DNS name, enter the following command. pscp -i C:\\path\\my-key-pair.ppk C:\\path\\Sample_file.txt my-instance-user-name@my-instance-public-dns-name:/home/my-instance-user-name/Sample_file.txt (IPv6) Alternatively, if your instance has an IPv6 address, to transfer a file using your instance\u2019s IPv6 address, enter the following command. The IPv6 address must be enclosed in square brackets ([ ]). pscp -i C:\\path\\my-key-pair.ppk C:\\path\\Sample_file.txt my-instance-user-name@[my-instance-IPv6-address]:/home/my-instance-user-name/Sample_file.txt","title":"Transferring files to your Linux instance using the PuTTY Secure Copy client"},{"location":"EC2/#transferring-files-to-your-linux-instance-using-winscp","text":"WinSCP is a GUI-based file manager for Windows that allows you to upload and transfer files to a remote computer using the SFTP, SCP, FTP, and FTPS protocols. WinSCP allows you to drag and drop files from your Windows computer to your Linux instance or synchronize entire directory structures between the two systems. To use WinSCP, you need the private key that you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance.","title":"Transferring files to your Linux instance using WinSCP"},{"location":"EC2/#prerequisites_4","text":"Download and install WinSCP from http://winscp.net/eng/download.php . For most users, the default installation options are OK. Start WinSCP.","title":"Prerequisites"},{"location":"EC2/#configuration","text":"At the WinSCP login screen, for Host name , enter one of the following: (Public DNS or IPv4 address) To log in using your instance\u2019s public DNS name or public IPv4 address, enter the public DNS name or public IPv4 address for your instance. (IPv6) Alternatively, if your instance has an IPv6 address, to log in using your instance\u2019s IPv6 address, enter the IPv6 address for your instance. For User name, enter the default user name for your AMI. For Amazon Linux 2 or the Amazon Linux AMI , the user name is ec2-user . For a CentOS AMI , the user name is centos . For a Debian AMI , the user name is admin . For a Fedora AMI , the user name is ec2-user or fedora . For a RHEL AMI , the user name is ec2-user or root . For a SUSE AMI , the user name is ec2-user or root . For an Ubuntu AMI , the user name is ubuntu . Otherwise, if ec2-user and root don\u2019t work, check with the AMI provider. Specify the private key for your instance. For Private key , enter the path to your private key, or choose the \u201c \u2026 \u201d button to browse for the file. To open the advanced site settings, for newer versions of WinSCP, choose Advanced . To find the Private key file setting, under SSH , choose Authentication . Here is a screenshot from WinSCP version 5.9.4: WinSCP requires a PuTTY private key file (.ppk). You can convert a .pem security key file to the .ppk format using PuTTYgen. For more information, see (Convert your private key using PuTTYgen)[#convert-your-private-key-using-puttygen].","title":"Configuration"},{"location":"EC2/#connect-and-start-transfering-files","text":"Choose Login . To add the host fingerprint to the host cache, choose Yes . After the connection is established, in the connection window your Linux instance is on the right and your local machine is on the left. You can drag and drop files directly into the remote file system from your local machine. For more information on WinSCP, see the project documentation at http://winscp.net/eng/docs/start . If you receive a \u201cCannot execute SCP to start transfer\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp . [ec2-user ~]$ sudo yum install -y openssh-clients","title":"Connect and start transfering files"},{"location":"EC2/#watch-it-here_2","text":"","title":"Watch it here"},{"location":"EC2/#transferring-files-to-your-linux-instance-using-filezilla","text":"FileZilla is a free software, cross-platform FTP application, consisting of FileZilla Client and FileZilla Server. Client binaries are available for Windows, Linux, and macOS, server binaries are available for Windows only. Both server and client support FTP and FTPS (FTP over SSL/TLS), while the client can in addition connect to SFTP servers. To use FileZilla, you need the private key that you generated in Convert your private key using PuTTYgen . You also need the public DNS name of your Linux instance.","title":"Transferring files to your Linux instance using FileZilla"},{"location":"EC2/#prerequisites_5","text":"Download and install FileZilla from https://filezilla-project.org/download.php for Windows or Linux (Choose your flavor). For most users, the default installation options are OK. Start FileZilla.","title":"Prerequisites"},{"location":"EC2/#configuration_1","text":"Edit (Preferences) > Settings > Connection > SFTP, Click Add key file Browse to the location of your .pem file and select it. A message box will appear asking your permission to convert the file into .ppk format. Click Yes , then give the file a name and store it somewhere. If you already convert the key by PuTTYgen , just browse the .ppk instead. If the new file is shown in the list of Keyfiles , then continue to the next step. If not, then click Add keyfile\u2026 and select the converted file. From File menu choose Site Manager , and choose Add a new site At the FileZilla Site Manager screen, for Host name , enter one of the following: (Public DNS or IPv4 address) To log in using your instance\u2019s public DNS name or public IPv4 address, enter the public DNS name or public IPv4 address for your instance. (IPv6) Alternatively, if your instance has an IPv6 address, to log in using your instance\u2019s IPv6 address, enter the IPv6 address for your instance. For the Protocol choose SFTP For the Login Type choose Normal For User name, enter the default user name for your AMI. For Amazon Linux 2 or the Amazon Linux AMI , the user name is ec2-user . For a CentOS AMI , the user name is centos . For a Debian AMI , the user name is admin . For a Fedora AMI , the user name is ec2-user or fedora . For a RHEL AMI , the user name is ec2-user or root . For a SUSE AMI , the user name is ec2-user or root . For an Ubuntu AMI , the user name is ubuntu . Otherwise, if ec2-user and root don\u2019t work, check with the AMI provider. Here is a screenshot from FileZilla version 3.49.1:","title":"Configuration"},{"location":"EC2/#connect-and-start-transfering-files_1","text":"Choose Connect . To add the host fingerprint to the Site Manager . After the connection is established, in the connection window your Linux instance is on the right and your local machine is on the left. You can drag and drop files directly into the remote file system from your local machine. For more information on FileZilla, see the project documentation at https://wiki.filezilla-project.org/Documentation . If you receive a \u201cCannot execute SCP to start transfer\u201d error, you must first install scp on your Linux instance. For some operating systems, this is located in the openssh-clients package. For Amazon Linux variants, such as the Amazon ECS-optimized AMI, use the following command to install scp . [ec2-user ~]$ sudo yum install -y openssh-clients","title":"Connect and start transfering files"},{"location":"EC2/#watch-it-here_3","text":"","title":"Watch it here"},{"location":"EC2/#getting-started-with-amazon-ec2-windows-instances","text":"To get started with a Windows instance, see Getting started with Amazon EC2 Windows instances .","title":"Getting started with Amazon EC2 Windows Instances"},{"location":"EC2/#connecting-to-your-windows-instance","text":"To connect to a Windows instance, see Connecting to Your Windows Instance in the Amazon EC2 User Guide for Windows Instances.","title":"Connecting to your Windows instance"},{"location":"EC2/#transfer-files-to-windows-instances","text":"To transfer files to and from a Windows instance, see Transfer files to Windows instances in the Amazon EC2 User Guide for Windows Instances.","title":"Transfer files to Windows instances"},{"location":"RunPython/","text":"Running Python Scripts on EC2 Instances \u00b6 In order to run a python script on an EC2 instance, yuo need to: Login to the AWS webservices Console Launcing an EC2 Instance Connecting to the EC2 Instance Transfering files to the EC2 Instance Running Python Scripts on the EC2 Instance Logging into the AWS Console \u00b6 Connectig to console by browsing https://console.aws.amazon.com/ , then choose the Sign Into the Console : You need to sign as a Root User . Enter you user name and password . After a sucessful login, you will see the AWS Management Console in your screen. In the Find Services bar, search for EC2 Once founded, press on EC2 Check more details on how to login and create an AWS user, see Setting Up an AWS Account . You need to think about your Availability Zone , before start launching an instance, see AWS Infrastructure . Launching an EC2 Instance \u00b6 To launch an EC2 instance, you need to press the Launch Instance button in your EC2 Dashboard . Then follow the wizard: Step1: Choose an Amazone Machine Image (AMI), check all the AMIs , We recommend a Free tier eligible AMIs for training, the name of the free AMIs, such as Ubuntu Server 16.04 LTS Step2: Choose an Instance Type, Check all the Instances Types and Capabilities , We recommend a Free tier eligible Instances for training, The AWS Free Tier allotment for Linux and Microsoft Windows instances is counted separately. You can run 750 hours of a Linux t3.micro , t2.micro , or t1.micro instance plus 750 hours of a Windows t3.micro , t2.micro , or t1.micro instance each month for the first 12 months . Steps 3 to 6: Configure Isnstance, Add Storage, Add Tags, and Configure Security Group You can skip these three steps by just pressing Review and Launch These three steps are related to the instance networking, storage, tags, and security accordingly. By default, the instance is configured well and has a small storage EBS. In case you need to configure those elements and for example add storage, you should not skip these steps. Step7: Review Instance Launch You need just press Launch . You have to use either an existing key pair or generating a new one, see, Create a key pair . Finally, press Launch Instances Press View Instances to see the status of your new instance and give it a Name . Wait until you find your instance status is running . Check more details on how to launch an AWS EC2 instance, see Launch an EC2 instance . Connecting to the EC2 Instance \u00b6 Connecting to the EC2 instances depends on many parameters and there are many ways to establish the connection and to exchange files between your local machine and the instance machine: Connecting to a Linux instance through Local Linux Machine , this can be accomplished by: SSH Connection Connecting to a Linux instance through Local Windows Machine , this can be accomplished by: Putty or MobaXterm Connecting to a Windows instance through Local Windows | Linux Machine Check more details on how to connect to an AWS EC2 instance, see Connect to an EC2 instance . Transfering files to the EC2 Instance \u00b6 Transfering files to the EC2 instances depends on many parameters and there are many ways to exchange files between your local machine and the instance machine: Transferring to | from a Linux instance through Local Linux Machine , this can be accomplished by: SCP FilZilla Transferring to | from a Linux instance through Local Windows Machine , this can be accomplished by: PSCP WinSCP FilZilla Transferring to | from a Windows instance through Local Windows | Linux Machine Check more details on how to transfer [to|from] an AWS EC2 instance, see transfer to|from an EC2 instance . Running Python Scripts on the EC2 Instance \u00b6 After connecting and traferrin files to the Ec2 instance. You can check the availability of the Python on the machine you have. What you need to start running python: Install Python3 It is already installed in the instance machine, and you can check on this by writing: ubuntu@ip-172-31-38-59:~$ python3 Python 3.5.2 (default, Jul 17 2020, 14:04:10) [GCC 5.4.0 20160609] on linux Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> exit() ubuntu@ip-172-31-38-59:~$ Install pip3 , will be needed to install more libraries and packages in python: ubuntu@ip-172-31-38-59:~$ sudo apt-get install python3-pip Install new packages by using pip3 , for example install numpy ubuntu@ip-172-31-38-59:~$ pip3 install numpy Prepare a python script to test it, such as import numpy as np a = np.sum([10,20]) print('hello from Hydro!\\n the result is= {}'.format(str(a))) Save this script in a file, named for example test.py , then run it by ubuntu@ip-172-31-38-59:~/testfolder$ python3 test.py hello from Hydro! the result is= 30 Prepare your virtual environment in Python3 \u00b6 Installing Virtualenv using pip3 \u00b6 Install Virtualenv : ubuntu@ip-172-31-38-59:~$ pip3 install virtualenv Collecting virtualenv Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.8MB 367kB/s Installing collected packages: virtualenv Successfully installed virtualenv-15.1.0 Where it is located: ubuntu@ip-172-31-38-59:~$ which virtualenv /home/ubuntu/.local/bin/virtualenv Where is python3: ubuntu@ip-172-31-38-59:~$ which python3 /usr/bin/python3 Create a new Virtualenv \u00b6 Initiate a new virtual environment, and name it hydrosat : ubuntu@ip-172-31-38-59:~$ virtualenv -p /usr/bin/python3 hydrosat created virtual environment CPython3.5.2.final.0-64 in 130ms creator CPython3Posix(dest=/home/ubuntu/hydrosat, clear=False, global=False) seeder FromAppData(download=False, setuptools=bundle, pip=bundle, wheel=bundle, via=copy, app_data_dir=/home/ubuntu/.local/share/virtualenv) added seed packages: pip==20.1.1, setuptools==49.2.0, wheel==0.34.2 activators FishActivator,PowerShellActivator,BashActivator,CShellActivator,PythonActivator,XonshActivator activate the new virtual environment: ubuntu@ip-172-31-38-59:~$ source hydrosat/bin/activate (hydrosat) ubuntu@ip-172-31-38-59:~$ python -V Python 3.5.2 deactivate the virtual environment: (hydrosat) ubuntu@ip-172-31-38-59:~$ deactivate ubuntu@ip-172-31-38-59:~$ Delete the virtual environment \u00b6 To delete a virtual environment, simply delete the project folder. Using the previous example, run the following command: ubuntu@ip-172-31-38-59:~$ rm -rf hydrosat ubuntu@ip-172-31-38-59:~$ ls testfolder TextFile.txt ubuntu@ip-172-31-38-59:~$ For mor information, see Installing and using virtualenv with Python 3 and other techniques are here for Virtualenv . Watch it all here \u00b6 Run python on Linux instance, connected from Linux machine \u00b6 Run python on Linux instance, connected from Windows machine \u00b6","title":"Running Python on AWS EC2 Instance"},{"location":"RunPython/#running-python-scripts-on-ec2-instances","text":"In order to run a python script on an EC2 instance, yuo need to: Login to the AWS webservices Console Launcing an EC2 Instance Connecting to the EC2 Instance Transfering files to the EC2 Instance Running Python Scripts on the EC2 Instance","title":"Running Python Scripts on EC2 Instances"},{"location":"RunPython/#logging-into-the-aws-console","text":"Connectig to console by browsing https://console.aws.amazon.com/ , then choose the Sign Into the Console : You need to sign as a Root User . Enter you user name and password . After a sucessful login, you will see the AWS Management Console in your screen. In the Find Services bar, search for EC2 Once founded, press on EC2 Check more details on how to login and create an AWS user, see Setting Up an AWS Account . You need to think about your Availability Zone , before start launching an instance, see AWS Infrastructure .","title":"Logging into the AWS Console"},{"location":"RunPython/#launching-an-ec2-instance","text":"To launch an EC2 instance, you need to press the Launch Instance button in your EC2 Dashboard . Then follow the wizard: Step1: Choose an Amazone Machine Image (AMI), check all the AMIs , We recommend a Free tier eligible AMIs for training, the name of the free AMIs, such as Ubuntu Server 16.04 LTS Step2: Choose an Instance Type, Check all the Instances Types and Capabilities , We recommend a Free tier eligible Instances for training, The AWS Free Tier allotment for Linux and Microsoft Windows instances is counted separately. You can run 750 hours of a Linux t3.micro , t2.micro , or t1.micro instance plus 750 hours of a Windows t3.micro , t2.micro , or t1.micro instance each month for the first 12 months . Steps 3 to 6: Configure Isnstance, Add Storage, Add Tags, and Configure Security Group You can skip these three steps by just pressing Review and Launch These three steps are related to the instance networking, storage, tags, and security accordingly. By default, the instance is configured well and has a small storage EBS. In case you need to configure those elements and for example add storage, you should not skip these steps. Step7: Review Instance Launch You need just press Launch . You have to use either an existing key pair or generating a new one, see, Create a key pair . Finally, press Launch Instances Press View Instances to see the status of your new instance and give it a Name . Wait until you find your instance status is running . Check more details on how to launch an AWS EC2 instance, see Launch an EC2 instance .","title":"Launching an EC2 Instance"},{"location":"RunPython/#connecting-to-the-ec2-instance","text":"Connecting to the EC2 instances depends on many parameters and there are many ways to establish the connection and to exchange files between your local machine and the instance machine: Connecting to a Linux instance through Local Linux Machine , this can be accomplished by: SSH Connection Connecting to a Linux instance through Local Windows Machine , this can be accomplished by: Putty or MobaXterm Connecting to a Windows instance through Local Windows | Linux Machine Check more details on how to connect to an AWS EC2 instance, see Connect to an EC2 instance .","title":"Connecting to the EC2 Instance"},{"location":"RunPython/#transfering-files-to-the-ec2-instance","text":"Transfering files to the EC2 instances depends on many parameters and there are many ways to exchange files between your local machine and the instance machine: Transferring to | from a Linux instance through Local Linux Machine , this can be accomplished by: SCP FilZilla Transferring to | from a Linux instance through Local Windows Machine , this can be accomplished by: PSCP WinSCP FilZilla Transferring to | from a Windows instance through Local Windows | Linux Machine Check more details on how to transfer [to|from] an AWS EC2 instance, see transfer to|from an EC2 instance .","title":"Transfering files to the EC2 Instance"},{"location":"RunPython/#running-python-scripts-on-the-ec2-instance","text":"After connecting and traferrin files to the Ec2 instance. You can check the availability of the Python on the machine you have. What you need to start running python: Install Python3 It is already installed in the instance machine, and you can check on this by writing: ubuntu@ip-172-31-38-59:~$ python3 Python 3.5.2 (default, Jul 17 2020, 14:04:10) [GCC 5.4.0 20160609] on linux Type \"help\", \"copyright\", \"credits\" or \"license\" for more information. >>> exit() ubuntu@ip-172-31-38-59:~$ Install pip3 , will be needed to install more libraries and packages in python: ubuntu@ip-172-31-38-59:~$ sudo apt-get install python3-pip Install new packages by using pip3 , for example install numpy ubuntu@ip-172-31-38-59:~$ pip3 install numpy Prepare a python script to test it, such as import numpy as np a = np.sum([10,20]) print('hello from Hydro!\\n the result is= {}'.format(str(a))) Save this script in a file, named for example test.py , then run it by ubuntu@ip-172-31-38-59:~/testfolder$ python3 test.py hello from Hydro! the result is= 30","title":"Running Python Scripts on the EC2 Instance"},{"location":"RunPython/#prepare-your-virtual-environment-in-python3","text":"","title":"Prepare your virtual environment in Python3"},{"location":"RunPython/#installing-virtualenv-using-pip3","text":"Install Virtualenv : ubuntu@ip-172-31-38-59:~$ pip3 install virtualenv Collecting virtualenv Downloading virtualenv-15.1.0-py2.py3-none-any.whl (1.8MB) 100% |\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1.8MB 367kB/s Installing collected packages: virtualenv Successfully installed virtualenv-15.1.0 Where it is located: ubuntu@ip-172-31-38-59:~$ which virtualenv /home/ubuntu/.local/bin/virtualenv Where is python3: ubuntu@ip-172-31-38-59:~$ which python3 /usr/bin/python3","title":"Installing Virtualenv using pip3"},{"location":"RunPython/#create-a-new-virtualenv","text":"Initiate a new virtual environment, and name it hydrosat : ubuntu@ip-172-31-38-59:~$ virtualenv -p /usr/bin/python3 hydrosat created virtual environment CPython3.5.2.final.0-64 in 130ms creator CPython3Posix(dest=/home/ubuntu/hydrosat, clear=False, global=False) seeder FromAppData(download=False, setuptools=bundle, pip=bundle, wheel=bundle, via=copy, app_data_dir=/home/ubuntu/.local/share/virtualenv) added seed packages: pip==20.1.1, setuptools==49.2.0, wheel==0.34.2 activators FishActivator,PowerShellActivator,BashActivator,CShellActivator,PythonActivator,XonshActivator activate the new virtual environment: ubuntu@ip-172-31-38-59:~$ source hydrosat/bin/activate (hydrosat) ubuntu@ip-172-31-38-59:~$ python -V Python 3.5.2 deactivate the virtual environment: (hydrosat) ubuntu@ip-172-31-38-59:~$ deactivate ubuntu@ip-172-31-38-59:~$","title":"Create a new Virtualenv"},{"location":"RunPython/#delete-the-virtual-environment","text":"To delete a virtual environment, simply delete the project folder. Using the previous example, run the following command: ubuntu@ip-172-31-38-59:~$ rm -rf hydrosat ubuntu@ip-172-31-38-59:~$ ls testfolder TextFile.txt ubuntu@ip-172-31-38-59:~$ For mor information, see Installing and using virtualenv with Python 3 and other techniques are here for Virtualenv .","title":"Delete the virtual environment"},{"location":"RunPython/#watch-it-all-here","text":"","title":"Watch it all here"},{"location":"RunPython/#run-python-on-linux-instance-connected-from-linux-machine","text":"","title":"Run python on Linux instance, connected from Linux machine"},{"location":"RunPython/#run-python-on-linux-instance-connected-from-windows-machine","text":"","title":"Run python on Linux instance, connected from Windows machine"},{"location":"storage/","text":"Storage in the AWS Web Services \u00b6 Amazon EC2 provides you with flexible, cost effective, and easy-to-use data storage options for your instances. Each option has a unique combination of performance and durability. These storage options can be used independently or in combination to suit your requirements. AWS Storage Options \u00b6 These storage options include the following: Amazon Elastic Block Store (Amazon EBS) Amazon EC2 instance store Amazon Elastic File System (Amazon EFS) Amazon Simple Storage Service (Amazon S3) The following figure shows the relationship between these storage options and your instance. Amazon EBS \u00b6 Amazon EBS provides durable, block-level storage volumes that you can attach to a running instance. You can use Amazon EBS as a primary storage device for data that requires frequent and granular updates. For example, Amazon EBS is the recommended storage option when you run a database on an instance. An EBS volume behaves like a raw, unformatted, external block device that you can attach to a single instance. The volume persists independently from the running life of an instance. After an EBS volume is attached to an instance, you can use it like any other physical hard drive. As illustrated in the previous figure, multiple volumes can be attached to an instance. You can also detach an EBS volume from one instance and attach it to another instance. You can dynamically change the configuration of a volume attached to an instance. To keep a backup copy of your data, you can create a snapshot of an EBS volume, which is stored in Amazon S3. You can create an EBS volume from a snapshot, and attach it to another instance. For more information, see Amazon Elastic Block Store (Amazon EBS) . Amazon EC2 instance store \u00b6 Many instances can access storage from disks that are physically attached to the host computer. This disk storage is referred to as instance store . Instance store provides temporary block-level storage for instances. The data on an instance store volume persists only during the life of the associated instance; if you stop or terminate an instance, any data on instance store volumes is lost. For more information, see Amazon EC2 instance store . Amazon EFS file system \u00b6 Amazon EFS provides scalable file storage for use with Amazon EC2. You can create an EFS file system and configure your instances to mount the file system. You can use an EFS file system as a common data source for workloads and applications running on multiple instances. For more information, see Amazon Elastic File System (Amazon EFS) . Amazon S3 \u00b6 Amazon S3 provides access to reliable and inexpensive data storage infrastructure. It is designed to make web-scale computing easier by enabling you to store and retrieve any amount of data, at any time, from within Amazon EC2 or anywhere on the web. For example, you can use Amazon S3 to store backup copies of your data and applications. Amazon EC2 uses Amazon S3 to store EBS snapshots and instance store-backed AMIs. For more information, see Amazon Simple Storage Service (Amazon S3) . Adding Storage \u00b6 Every time you launch an instance from an AMI, a root storage device is created for that instance. The root storage device contains all the information necessary to boot the instance. You can specify storage volumes in addition to the root device volume when you create an AMI or launch an instance using block device mapping . For more information, see Block device mapping . You can also attach EBS volumes to a running instance. For more information, see Attaching an Amazon EBS volume to an instance . Storage Pricing \u00b6 For information about storage pricing, open AWS Pricing , scroll down to Services Pricing , choose Storage , and then choose the storage option to open that storage option\u2019s pricing page. For information about estimating the cost of storage, see the AWS Pricing Calculator .","title":"Dealing with AWS Storage"},{"location":"storage/#storage-in-the-aws-web-services","text":"Amazon EC2 provides you with flexible, cost effective, and easy-to-use data storage options for your instances. Each option has a unique combination of performance and durability. These storage options can be used independently or in combination to suit your requirements.","title":"Storage in the AWS Web Services"},{"location":"storage/#aws-storage-options","text":"These storage options include the following: Amazon Elastic Block Store (Amazon EBS) Amazon EC2 instance store Amazon Elastic File System (Amazon EFS) Amazon Simple Storage Service (Amazon S3) The following figure shows the relationship between these storage options and your instance.","title":"AWS Storage Options"},{"location":"storage/#amazon-ebs","text":"Amazon EBS provides durable, block-level storage volumes that you can attach to a running instance. You can use Amazon EBS as a primary storage device for data that requires frequent and granular updates. For example, Amazon EBS is the recommended storage option when you run a database on an instance. An EBS volume behaves like a raw, unformatted, external block device that you can attach to a single instance. The volume persists independently from the running life of an instance. After an EBS volume is attached to an instance, you can use it like any other physical hard drive. As illustrated in the previous figure, multiple volumes can be attached to an instance. You can also detach an EBS volume from one instance and attach it to another instance. You can dynamically change the configuration of a volume attached to an instance. To keep a backup copy of your data, you can create a snapshot of an EBS volume, which is stored in Amazon S3. You can create an EBS volume from a snapshot, and attach it to another instance. For more information, see Amazon Elastic Block Store (Amazon EBS) .","title":"Amazon EBS"},{"location":"storage/#amazon-ec2-instance-store","text":"Many instances can access storage from disks that are physically attached to the host computer. This disk storage is referred to as instance store . Instance store provides temporary block-level storage for instances. The data on an instance store volume persists only during the life of the associated instance; if you stop or terminate an instance, any data on instance store volumes is lost. For more information, see Amazon EC2 instance store .","title":"Amazon EC2 instance store"},{"location":"storage/#amazon-efs-file-system","text":"Amazon EFS provides scalable file storage for use with Amazon EC2. You can create an EFS file system and configure your instances to mount the file system. You can use an EFS file system as a common data source for workloads and applications running on multiple instances. For more information, see Amazon Elastic File System (Amazon EFS) .","title":"Amazon EFS file system"},{"location":"storage/#amazon-s3","text":"Amazon S3 provides access to reliable and inexpensive data storage infrastructure. It is designed to make web-scale computing easier by enabling you to store and retrieve any amount of data, at any time, from within Amazon EC2 or anywhere on the web. For example, you can use Amazon S3 to store backup copies of your data and applications. Amazon EC2 uses Amazon S3 to store EBS snapshots and instance store-backed AMIs. For more information, see Amazon Simple Storage Service (Amazon S3) .","title":"Amazon S3"},{"location":"storage/#adding-storage","text":"Every time you launch an instance from an AMI, a root storage device is created for that instance. The root storage device contains all the information necessary to boot the instance. You can specify storage volumes in addition to the root device volume when you create an AMI or launch an instance using block device mapping . For more information, see Block device mapping . You can also attach EBS volumes to a running instance. For more information, see Attaching an Amazon EBS volume to an instance .","title":"Adding Storage"},{"location":"storage/#storage-pricing","text":"For information about storage pricing, open AWS Pricing , scroll down to Services Pricing , choose Storage , and then choose the storage option to open that storage option\u2019s pricing page. For information about estimating the cost of storage, see the AWS Pricing Calculator .","title":"Storage Pricing"}]}