{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs For full documentation visit mkdocs.org . Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit. Project layout mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Home"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"AWS_Account/","text":"Setting Up an AWS Account Create your account In order to sign up to AWS services, please follow the following steps: Open the Amazon Web Services home page. Choose Create an AWS Account. Note: If you signed in to AWS recently, choose Sign in to the Console. If Create a new AWS account isn't visible, first choose Sign in to a different account, and then choose Create a new AWS account. Enter your account information, and then choose Continue. Be sure that you enter your account information correctly, especially your email address. If you enter your email address incorrectly, you can't access your account. Choose Personal or Professional. Note: Personal accounts and professional accounts have the same features and functions. Enter your company or personal information. Important: For professional AWS accounts, it's a best practice to enter the company phone number rather than a personal cell phone. Configuring a root account with an individual email address or a personal phone number can make your account insecure. Read and accept the AWS Customer Agreement. Note: Be sure that you read and understand the terms of the AWS Customer Agreement. Choose Create Account and Continue. You receive an email to confirm that your account is created. You can sign in to your new account using the email address and password you registered with. However, you can't use AWS services until you finish activating your account. Add a Payment Method On the Payment Information page, enter the information about your payment method, and then choose Verify and Add. Note: If you want to use a different billing address for your AWS billing information, choose Use a new address before you choose Verify and Add. Important: You cannot proceed with the sign-up process until you add a valid payment method. Verify your phone number Choose your country or region code from the list. Enter a phone number where you can be reached in the next few minutes. Enter the code displayed in the captcha and then submit. In a few moments, an automated system contacts you. Enter the PIN you receive, and then choose Continue. Choose an AWS Support plan On the Select a Support Plan page, choose one of the available Support plans. For a description of the available Support plans and their benefits, see Compare AWS Support Plans . Seting up Your Budget You need to set up your budget, in order to avoid any extra charges,. Any extra charges will be aletrted to you before going into action. Please follow the following steps to fix your budget: After you received you registration confirmation, sign in to the console . After a successed login to the console, naviaget to your account name, and choose My Billing Daschboard Choose on the left Budgets which is located under Cost Management, Then Press Craete Budget and choose the Cost budget, then press Set your budget Name the budget, period and budget amount, then press Configure alerts Choose the alert threshold, for example 50% Put your email address to send you alert when your charges become 50% from your budget Watch it here More Resources","title":"Setting Up an AWS Account"},{"location":"AWS_Account/#setting-up-an-aws-account","text":"","title":"Setting Up an AWS Account"},{"location":"AWS_Account/#create-your-account","text":"In order to sign up to AWS services, please follow the following steps: Open the Amazon Web Services home page. Choose Create an AWS Account. Note: If you signed in to AWS recently, choose Sign in to the Console. If Create a new AWS account isn't visible, first choose Sign in to a different account, and then choose Create a new AWS account. Enter your account information, and then choose Continue. Be sure that you enter your account information correctly, especially your email address. If you enter your email address incorrectly, you can't access your account. Choose Personal or Professional. Note: Personal accounts and professional accounts have the same features and functions. Enter your company or personal information. Important: For professional AWS accounts, it's a best practice to enter the company phone number rather than a personal cell phone. Configuring a root account with an individual email address or a personal phone number can make your account insecure. Read and accept the AWS Customer Agreement. Note: Be sure that you read and understand the terms of the AWS Customer Agreement. Choose Create Account and Continue. You receive an email to confirm that your account is created. You can sign in to your new account using the email address and password you registered with. However, you can't use AWS services until you finish activating your account.","title":"Create your account"},{"location":"AWS_Account/#add-a-payment-method","text":"On the Payment Information page, enter the information about your payment method, and then choose Verify and Add. Note: If you want to use a different billing address for your AWS billing information, choose Use a new address before you choose Verify and Add. Important: You cannot proceed with the sign-up process until you add a valid payment method.","title":"Add a Payment Method"},{"location":"AWS_Account/#verify-your-phone-number","text":"Choose your country or region code from the list. Enter a phone number where you can be reached in the next few minutes. Enter the code displayed in the captcha and then submit. In a few moments, an automated system contacts you. Enter the PIN you receive, and then choose Continue.","title":"Verify your phone number"},{"location":"AWS_Account/#choose-an-aws-support-plan","text":"On the Select a Support Plan page, choose one of the available Support plans. For a description of the available Support plans and their benefits, see Compare AWS Support Plans .","title":"Choose an AWS Support plan"},{"location":"AWS_Account/#seting-up-your-budget","text":"You need to set up your budget, in order to avoid any extra charges,. Any extra charges will be aletrted to you before going into action. Please follow the following steps to fix your budget: After you received you registration confirmation, sign in to the console . After a successed login to the console, naviaget to your account name, and choose My Billing Daschboard Choose on the left Budgets which is located under Cost Management, Then Press Craete Budget and choose the Cost budget, then press Set your budget Name the budget, period and budget amount, then press Configure alerts Choose the alert threshold, for example 50% Put your email address to send you alert when your charges become 50% from your budget","title":"Seting up Your Budget"},{"location":"AWS_Account/#watch-it-here","text":"","title":"Watch it here"},{"location":"AWS_Account/#more-resources","text":"","title":"More Resources"},{"location":"EC2/","text":"Amazon Elastic Compute Cloud (EC2) Instances What is Amazon EC2? Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EC2 enables you to scale up or down to handle changes in requirements or spikes in popularity, reducing your need to forecast traffic. If you would like to know more about Cloud Computing from AWS point of view, see What is Cloud Computing? How to get started with Amazon EC2 First, you need to get set up to use Amazon EC2. After you are set up, you are ready to complete the Getting Started tutorial for Amazon EC2. Whenever you need more information about an Amazon EC2 feature, you can read the technical documentation. You need to get familiar with the follwoing: Instances and AMIs Regions and Availability Zones Instance types Tags Setting up with Amazon EC2 Complete the tasks in this section to get set up for launching an Amazon EC2 instance for the first time: Sign up for AWS Create a key pair Create a security group Sign up for AWS Please follow the instructions in Setting Up an AWS Account . Create a key pair AWS uses public-key cryptography to secure the login information for your instance. A Linux instance has no password; you use a key pair to log in to your instance securely. You specify the name of the key pair when you launch your instance, then provide the private key when you log in using SSH. If you haven't created a key pair already, you can create one using the Amazon EC2 console. Note that if you plan to launch instances in multiple Regions, you'll need to create a key pair in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . You can create a key pair using one of the following method: Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . In the navigation pane, choose Key Pairs . Choose Create key pair . For Name , enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces. For File format, choose the format in which to save the private key. To save the private key in a format that can be used with OpenSSH, choose pem . To save the private key in a format that can be used with PuTTY, choose ppk . Choose Create key pair . The private key file is automatically downloaded by your browser. The base file name is the name you specified as the name of your key pair, and the file name extension is determined by the file format you chose. Save the private key file in a safe place. /!\\ Important This is the only chance for you to save the private key file. If you will use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it. chmod 400 my-key-pair.pem If you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file . Watch it here Create a security group Security groups act as a firewall for associated instances, controlling both inbound and outbound traffic at the instance level. You must add rules to a security group that enable you to connect to your instance from your IP address using SSH. You can also add rules that allow inbound and outbound HTTP and HTTPS access from anywhere. Note that if you plan to launch instances in multiple Regions, you'll need to create a security group in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . Prerequisites You'll need the public IPv4 address of your local computer. The security group editor in the Amazon EC2 console can automatically detect the public IPv4 address for you. Alternatively, you can use the search phrase \"what is my IP address\" in an Internet browser, or use the following service: Check IP . If you are connecting through an Internet service provider (ISP) or from behind a firewall without a static IP address, you need to find out the range of IP addresses used by client computers. To create a security group with least privilege Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select a Region for the security group. Security groups are specific to a Region, so you should select the same Region in which you created your key pair. In the navigation pane, choose Security Groups . Choose Create security group . In the Basic details section, do the following: a. Enter a name for the new security group and a description. Use a name that is easy for you to remember, such as your user name, followed by SG , plus the Region name. For example, me_SG_uswest2. b. In the VPC list, select your default VPC for the Region. In the Inbound rules section, create the following rules (choose Add rule for each new rule): Choose HTTP from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose HTTPS from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose SSH from the Type list. In the Source box, choose My IP to automatically populate the field with the public IPv4 address of your local computer. Alternatively, choose Custom and specify the public IPv4 address of your computer or network in CIDR notation. To specify an individual IP address in CIDR notation, add the routing suffix /32 , for example, 203.0.113.25/32 . If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24 . /!\\ Warning For security reasons, we don't recommend that you allow SSH access from all IPv4 addresses (0.0.0.0/0) to your instance, except for testing purposes and only for a short time. Choose Create security group . For more information, see Amazon EC2 security groups for Linux instances . Getting started with Amazon EC2 Linux instances When you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier . If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle. The instance is an Amazon EBS-backed instance (meaning that the root volume is an EBS (Elastic Block Store) volume). You can either specify the Availability Zone in which your instance runs, or let Amazon EC2 select an Availability Zone for you. When you launch your instance, you secure it by specifying a key pair and security group. When you connect to your instance, you must specify the private key of the key pair that you specified when launching your instance. In ordere to implement the previous configuration, you should proceeed with the following: Launch an instance Connect to your instance Clean up your instance Terminate your instance Next Steps Launch an instance You can launch a Linux instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn't cover all possible options. For more information about the advanced options, see Launching an Instance . To launch an instance Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the console dashboard, choose Launch Instance . The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select an HVM version of Amazon Linux 2. Notice that these AMIs are marked \"Free tier eligible.\" On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro instance type, which is selected by default. The t2.micro instance type is eligible for the free tier. In Regions where t2.micro is unavailable, you can use a t3.micro instance under the free tier. For more information, see AWS Free Tier . Choose Review and Launch to let the wizard complete the other configuration settings for you. On the Review Instance Launch page, under Security Groups , you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: a. Choose Edit security groups . b. On the Configure Security Group page, ensure that Select an existing security group is selected. c. Select your security group from the list of existing security groups, and then choose Review and Launch . On the Review Instance Launch page, choose Launch . When prompted for a key pair, select Choose an existing key pair , then select the key pair that you created when getting set up. /!\\ Warning Don't select 'Proceed without a key pair'. If you launch your instance without a key pair, then you 'cannot' connect to it. When you are ready, select the acknowledgement check box, and then choose Launch Instances . A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending . After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose Show/Hide Columns (the gear-shaped icon) in the top right corner of the page and then select Public DNS (IPv4) .) It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column. Connect to your instance There are several ways to connect to your Linux instance. For more information, see Connect to your Linux instance . /!\\ Important You can't connect to your instance unless you launched it with a key pair for which you have the .pem file and you launched it with a security group that allows SSH access from your computer. If you can't connect to your instance, see Troubleshooting connecting to your instance for assistance. Clean up your instance After you've finished with the instance that you created for this tutorial, you should clean up by terminating the instance. If you want to do more with this instance before you clean up, see Next steps . /!\\ Important Terminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it. Terminate your instance If you launched an instance that is not within the AWS Free Tier , you'll stop incurring charges for that instance as soon as the instance status changes to shutting down or terminated . If you'd like to keep your instance for later, but not incur charges, you can stop the instance now and then start it again later. For more information, see Stopping Instances . To terminate your instance In the navigation pane, choose Instances . In the list of instances, select the instance. Choose Actions, Instance State, Terminate . Choose Yes, Terminate when prompted for confirmation. Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted. Next Steps After you start your instance, you might want to try some of the following exercises: Learn how to remotely manage your EC2 instance using Run Command. For more information, see AWS Systems Manager Run Command in the AWS Systems Manager User Guide. Configure a CloudWatch alarm to notify you if your usage exceeds the Free Tier. For more information, see Create a Billing Alarm in the AWS Billing and Cost Management User Guide. Watch it here Connecting to your Linux EC2 Instances Connect to the Linux instances that you launched and transfer files between your local computer and your instance. The operating system of your local computer determines the options that you have to connect from your local computer to your Linux instance. Connection options If your local computer operating system is Linux or macOS X , you can connect by using one pf the following: SSH Client EC2 Instance Connect AWS Systems Manager Session Manager If your local computer operating system is Windows , you can connect by using one pf the following: PuTTY SSH Client AWS Systems Manager Session Manager Windows Subsystem for Linux Connecting to your Linux instance using SSH After you launch your instance, you can connect to it and use it the way that you'd use a computer sitting in front of you. Prerequisites Before you connect to your Linux instance, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install an SSH client on your local computer (either Linux or Windows) as needed Your local computer might have an SSH client installed by default. You can verify this by typing ssh at the command line. If your compute doesn't recognize the command, you can install an SSH client. Recent versions of Windows Server 2019 and Windows 10 - OpenSSH is included as an installable component. For information, see OpenSSH in Windows . Earlier versions of Windows - Download and install OpenSSH. For more information, see Win32-OpenSSH . Linux and macOS X - Download and install OpenSSH. For more information, see Linux-openssh . Connect to your Linux instance using an SSH client Use the following procedure to connect to your Linux instance using an SSH client. If you receive an error while attempting to connect to your instance, see Troubleshooting connecting to your instance . To connect to your instance using SSH In a terminal window, use the ssh command to connect to the instance. You specify the path and file name of the private key ( .pem ), the user name for your instance, and the public DNS name or IPv6 address for your instance. For more information about how to find the private key, the user name for your instance, and the DNS name or IPv6 address for an instance, see Locate the private key and Get information about your instance . To connect to your instance, use one of the following commands. a. (Public DNS) To connect using your instance's public DNS name, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name b. (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-IPv6-address You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (198-51-100-1)' can't be established. ECDSA key fingerprint is l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY. Are you sure you want to continue connecting (yes/no)? Enter yes . You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (ECDSA) to the list of known hosts. Connecting to your Linux instance from Windows using PuTTY or MobaXterm After you launch your instance, you can connect to it and use it the way that you'd use a computer sitting in front of you. The following instructions explain how to connect to your instance using PuTTY, and MobaXterm, free SSH client for Windows. If you receive an error while attempting to connect to your instance, see General prerequisites for connecting to your instance . Prerequisites Before you connect to your Linux instance using PuTTY, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install PuTTY on your local computer Download and install PuTTY from the PuTTY download page . If you already have an older version of PuTTY installed, we recommend that you download the latest version. Be sure to install the entire suite. Or Install MobaXterm on your local computer Download and install MobaXterm from the MobaXterm download page . Convert your private key using PuTTYgen In case you do not have a .ppk , locate the private key ( .pem file) for the key pair that you specified when you launched the instance. Convert the .pem file to a .ppk file for use with PuTTY. For more information, follow the steps in the next subsection. Convert your private key using PuTTYgen PuTTY does not natively support the private key format for SSH keys. PuTTY provides a tool named PuTTYgen, which converts keys to the required format for PuTTY. You must convert your private key ( .pem file) into this format ( .ppk file) as follows in order to connect to your instance using PuTTY. To convert your private key From the Start menu, choose All Programs, PuTTY, PuTTYgen . Under Type of key to generate , choose RSA . If you're using an older version of PuTTYgen, choose SSH-2 RSA . Choose Load . By default, PuTTYgen displays only files with the extension .ppk . To locate your .pem file, choose the option to display files of all types. Select all file types Select your .pem file for the key pair that you specified when you launched your instance and choose Open . PuTTYgen displays a notice that the .pem file was successfully imported. Choose OK . To save the key in the format that PuTTY can use, choose Save private key . PuTTYgen displays a warning about saving the key without a passphrase. Choose Yes . /!\\ Note A passphrase on a private key is an extra layer of protection. Even if your private key is discovered, it can't be used without the passphrase. The downside to using a passphrase is that it makes automation harder because human intervention is needed to log on to an instance, or to copy files to an instance. Specify the same name for the key that you used for the key pair (for example, my-key-pair ) and choose Save . PuTTY automatically adds the .ppk file extension. Your private key is now in the correct format for use with PuTTY. You can now connect to your instance using PuTTY's SSH client. Connecting to your Linux instance Use the following procedure to connect to your Linux instance using PuTTY. You need the .ppk file that you created for your private key. For more information, see Convert your private key using PuTTYgen in the preceding section. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . To connect to your instance using PuTTY Start PuTTY (from the Start menu, choose All Programs, PuTTY, PuTTY ). In the Category pane , choose Session and complete the following fields: a. In the Host Name box, do one of the following: (Public DNS) To connect using your instance's public DNS name, enter my-instance-user-name@my-instance-public-dns-name . (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter my-instance-user-name@my-instance-IPv6-address . For information about how to get the user name for your instance, and the public DNS name or IPv6 address of your instance, see Get information about your instance . b. Ensure that the Port value is 22. c. Under Connection type , select SSH . (Optional) You can configure PuTTY to automatically send 'keepalive' data at regular intervals to keep the session active. This is useful to avoid disconnecting from your instance due to session inactivity. In the Category pane, choose Connection , and then enter the required interval in the Seconds between keepalives field. For example, if your session disconnects after 10 minutes of inactivity, enter 180 to configure PuTTY to send keepalive data every 3 minutes. In the Category pane, expand Connection , expand SSH , and then choose Auth . Complete the following: a. Choose Browse . b. Select the .ppk file that you generated for your key pair and choose Open . c. (Optional) If you plan to start this session again later, you can save the session information for future use. Under Category , choose Session , enter a name for the session in Saved Sessions , and then choose Save . d. Choose Open . If this is the first time you have connected to this instance, PuTTY displays a security alert dialog box that asks whether you trust the host to which you are connecting. a. Choose Yes . A window opens and you are connected to your instance. /!\\ Note If you specified a passphrase when you converted your private key to PuTTY's format, you must provide that passphrase when you log in to the instance. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . Getting started with Amazon EC2 Windows Instances To get started with a Windows instance, see Getting started with Amazon EC2 Windows instances . Connecting to your Windows instance To connect to a Windows instance, see Connecting to Your Windows Instance in the Amazon EC2 User Guide for Windows Instances.","title":"Using EC2 Compute Instances"},{"location":"EC2/#amazon-elastic-compute-cloud-ec2-instances","text":"","title":"Amazon Elastic Compute Cloud (EC2) Instances"},{"location":"EC2/#what-is-amazon-ec2","text":"Amazon Elastic Compute Cloud (Amazon EC2) provides scalable computing capacity in the Amazon Web Services (AWS) cloud. Using Amazon EC2 eliminates your need to invest in hardware up front, so you can develop and deploy applications faster. You can use Amazon EC2 to launch as many or as few virtual servers as you need, configure security and networking, and manage storage. Amazon EC2 enables you to scale up or down to handle changes in requirements or spikes in popularity, reducing your need to forecast traffic. If you would like to know more about Cloud Computing from AWS point of view, see What is Cloud Computing?","title":"What is Amazon EC2?"},{"location":"EC2/#how-to-get-started-with-amazon-ec2","text":"First, you need to get set up to use Amazon EC2. After you are set up, you are ready to complete the Getting Started tutorial for Amazon EC2. Whenever you need more information about an Amazon EC2 feature, you can read the technical documentation. You need to get familiar with the follwoing: Instances and AMIs Regions and Availability Zones Instance types Tags","title":"How to get started with Amazon EC2"},{"location":"EC2/#setting-up-with-amazon-ec2","text":"Complete the tasks in this section to get set up for launching an Amazon EC2 instance for the first time: Sign up for AWS Create a key pair Create a security group","title":"Setting up with Amazon EC2"},{"location":"EC2/#sign-up-for-aws","text":"Please follow the instructions in Setting Up an AWS Account .","title":"Sign up for AWS"},{"location":"EC2/#create-a-key-pair","text":"AWS uses public-key cryptography to secure the login information for your instance. A Linux instance has no password; you use a key pair to log in to your instance securely. You specify the name of the key pair when you launch your instance, then provide the private key when you log in using SSH. If you haven't created a key pair already, you can create one using the Amazon EC2 console. Note that if you plan to launch instances in multiple Regions, you'll need to create a key pair in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones . You can create a key pair using one of the following method: Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . In the navigation pane, choose Key Pairs . Choose Create key pair . For Name , enter a descriptive name for the key pair. Amazon EC2 associates the public key with the name that you specify as the key name. A key name can include up to 255 ASCII characters. It can\u2019t include leading or trailing spaces. For File format, choose the format in which to save the private key. To save the private key in a format that can be used with OpenSSH, choose pem . To save the private key in a format that can be used with PuTTY, choose ppk . Choose Create key pair . The private key file is automatically downloaded by your browser. The base file name is the name you specified as the name of your key pair, and the file name extension is determined by the file format you chose. Save the private key file in a safe place. /!\\ Important This is the only chance for you to save the private key file. If you will use an SSH client on a macOS or Linux computer to connect to your Linux instance, use the following command to set the permissions of your private key file so that only you can read it. chmod 400 my-key-pair.pem If you do not set these permissions, then you cannot connect to your instance using this key pair. For more information, see Error: Unprotected private key file .","title":"Create a key pair"},{"location":"EC2/#watch-it-here","text":"","title":"Watch it here"},{"location":"EC2/#create-a-security-group","text":"Security groups act as a firewall for associated instances, controlling both inbound and outbound traffic at the instance level. You must add rules to a security group that enable you to connect to your instance from your IP address using SSH. You can also add rules that allow inbound and outbound HTTP and HTTPS access from anywhere. Note that if you plan to launch instances in multiple Regions, you'll need to create a security group in each Region. For more information about Regions, see Regions, Availability Zones, and Local Zones .","title":"Create a security group"},{"location":"EC2/#prerequisites","text":"You'll need the public IPv4 address of your local computer. The security group editor in the Amazon EC2 console can automatically detect the public IPv4 address for you. Alternatively, you can use the search phrase \"what is my IP address\" in an Internet browser, or use the following service: Check IP . If you are connecting through an Internet service provider (ISP) or from behind a firewall without a static IP address, you need to find out the range of IP addresses used by client computers. To create a security group with least privilege Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the navigation bar, select a Region for the security group. Security groups are specific to a Region, so you should select the same Region in which you created your key pair. In the navigation pane, choose Security Groups . Choose Create security group . In the Basic details section, do the following: a. Enter a name for the new security group and a description. Use a name that is easy for you to remember, such as your user name, followed by SG , plus the Region name. For example, me_SG_uswest2. b. In the VPC list, select your default VPC for the Region. In the Inbound rules section, create the following rules (choose Add rule for each new rule): Choose HTTP from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose HTTPS from the Type list, and make sure that Source is set to Anywhere ( 0.0.0.0/0 ) . Choose SSH from the Type list. In the Source box, choose My IP to automatically populate the field with the public IPv4 address of your local computer. Alternatively, choose Custom and specify the public IPv4 address of your computer or network in CIDR notation. To specify an individual IP address in CIDR notation, add the routing suffix /32 , for example, 203.0.113.25/32 . If your company allocates addresses from a range, specify the entire range, such as 203.0.113.0/24 . /!\\ Warning For security reasons, we don't recommend that you allow SSH access from all IPv4 addresses (0.0.0.0/0) to your instance, except for testing purposes and only for a short time. Choose Create security group . For more information, see Amazon EC2 security groups for Linux instances .","title":"Prerequisites"},{"location":"EC2/#getting-started-with-amazon-ec2-linux-instances","text":"When you sign up for AWS, you can get started with Amazon EC2 using the AWS Free Tier . If you created your AWS account less than 12 months ago, and have not already exceeded the free tier benefits for Amazon EC2, it will not cost you anything to complete this tutorial, because we help you select options that are within the free tier benefits. Otherwise, you'll incur the standard Amazon EC2 usage fees from the time that you launch the instance until you terminate the instance (which is the final task of this tutorial), even if it remains idle. The instance is an Amazon EBS-backed instance (meaning that the root volume is an EBS (Elastic Block Store) volume). You can either specify the Availability Zone in which your instance runs, or let Amazon EC2 select an Availability Zone for you. When you launch your instance, you secure it by specifying a key pair and security group. When you connect to your instance, you must specify the private key of the key pair that you specified when launching your instance. In ordere to implement the previous configuration, you should proceeed with the following: Launch an instance Connect to your instance Clean up your instance Terminate your instance Next Steps","title":"Getting started with Amazon EC2 Linux instances"},{"location":"EC2/#launch-an-instance","text":"You can launch a Linux instance using the AWS Management Console as described in the following procedure. This tutorial is intended to help you launch your first instance quickly, so it doesn't cover all possible options. For more information about the advanced options, see Launching an Instance . To launch an instance Open the Amazon EC2 console at https://console.aws.amazon.com/ec2/ . From the console dashboard, choose Launch Instance . The Choose an Amazon Machine Image (AMI) page displays a list of basic configurations, called Amazon Machine Images (AMIs), that serve as templates for your instance. Select an HVM version of Amazon Linux 2. Notice that these AMIs are marked \"Free tier eligible.\" On the Choose an Instance Type page, you can select the hardware configuration of your instance. Select the t2.micro instance type, which is selected by default. The t2.micro instance type is eligible for the free tier. In Regions where t2.micro is unavailable, you can use a t3.micro instance under the free tier. For more information, see AWS Free Tier . Choose Review and Launch to let the wizard complete the other configuration settings for you. On the Review Instance Launch page, under Security Groups , you'll see that the wizard created and selected a security group for you. You can use this security group, or alternatively you can select the security group that you created when getting set up using the following steps: a. Choose Edit security groups . b. On the Configure Security Group page, ensure that Select an existing security group is selected. c. Select your security group from the list of existing security groups, and then choose Review and Launch . On the Review Instance Launch page, choose Launch . When prompted for a key pair, select Choose an existing key pair , then select the key pair that you created when getting set up. /!\\ Warning Don't select 'Proceed without a key pair'. If you launch your instance without a key pair, then you 'cannot' connect to it. When you are ready, select the acknowledgement check box, and then choose Launch Instances . A confirmation page lets you know that your instance is launching. Choose View Instances to close the confirmation page and return to the console. On the Instances screen, you can view the status of the launch. It takes a short time for an instance to launch. When you launch an instance, its initial state is pending . After the instance starts, its state changes to running and it receives a public DNS name. (If the Public DNS (IPv4) column is hidden, choose Show/Hide Columns (the gear-shaped icon) in the top right corner of the page and then select Public DNS (IPv4) .) It can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks; you can view this information in the Status Checks column.","title":"Launch an instance"},{"location":"EC2/#connect-to-your-instance","text":"There are several ways to connect to your Linux instance. For more information, see Connect to your Linux instance . /!\\ Important You can't connect to your instance unless you launched it with a key pair for which you have the .pem file and you launched it with a security group that allows SSH access from your computer. If you can't connect to your instance, see Troubleshooting connecting to your instance for assistance.","title":"Connect to your instance"},{"location":"EC2/#clean-up-your-instance","text":"After you've finished with the instance that you created for this tutorial, you should clean up by terminating the instance. If you want to do more with this instance before you clean up, see Next steps . /!\\ Important Terminating an instance effectively deletes it; you can't reconnect to an instance after you've terminated it.","title":"Clean up your instance"},{"location":"EC2/#terminate-your-instance","text":"If you launched an instance that is not within the AWS Free Tier , you'll stop incurring charges for that instance as soon as the instance status changes to shutting down or terminated . If you'd like to keep your instance for later, but not incur charges, you can stop the instance now and then start it again later. For more information, see Stopping Instances . To terminate your instance In the navigation pane, choose Instances . In the list of instances, select the instance. Choose Actions, Instance State, Terminate . Choose Yes, Terminate when prompted for confirmation. Amazon EC2 shuts down and terminates your instance. After your instance is terminated, it remains visible on the console for a short while, and then the entry is deleted.","title":"Terminate your instance"},{"location":"EC2/#next-steps","text":"After you start your instance, you might want to try some of the following exercises: Learn how to remotely manage your EC2 instance using Run Command. For more information, see AWS Systems Manager Run Command in the AWS Systems Manager User Guide. Configure a CloudWatch alarm to notify you if your usage exceeds the Free Tier. For more information, see Create a Billing Alarm in the AWS Billing and Cost Management User Guide.","title":"Next Steps"},{"location":"EC2/#watch-it-here_1","text":"","title":"Watch it here"},{"location":"EC2/#connecting-to-your-linux-ec2-instances","text":"Connect to the Linux instances that you launched and transfer files between your local computer and your instance. The operating system of your local computer determines the options that you have to connect from your local computer to your Linux instance.","title":"Connecting to your Linux EC2 Instances"},{"location":"EC2/#connection-options","text":"If your local computer operating system is Linux or macOS X , you can connect by using one pf the following: SSH Client EC2 Instance Connect AWS Systems Manager Session Manager If your local computer operating system is Windows , you can connect by using one pf the following: PuTTY SSH Client AWS Systems Manager Session Manager Windows Subsystem for Linux","title":"Connection options"},{"location":"EC2/#connecting-to-your-linux-instance-using-ssh","text":"After you launch your instance, you can connect to it and use it the way that you'd use a computer sitting in front of you.","title":"Connecting to your Linux instance using SSH"},{"location":"EC2/#prerequisites_1","text":"Before you connect to your Linux instance, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install an SSH client on your local computer (either Linux or Windows) as needed Your local computer might have an SSH client installed by default. You can verify this by typing ssh at the command line. If your compute doesn't recognize the command, you can install an SSH client. Recent versions of Windows Server 2019 and Windows 10 - OpenSSH is included as an installable component. For information, see OpenSSH in Windows . Earlier versions of Windows - Download and install OpenSSH. For more information, see Win32-OpenSSH . Linux and macOS X - Download and install OpenSSH. For more information, see Linux-openssh .","title":"Prerequisites"},{"location":"EC2/#connect-to-your-linux-instance-using-an-ssh-client","text":"Use the following procedure to connect to your Linux instance using an SSH client. If you receive an error while attempting to connect to your instance, see Troubleshooting connecting to your instance . To connect to your instance using SSH In a terminal window, use the ssh command to connect to the instance. You specify the path and file name of the private key ( .pem ), the user name for your instance, and the public DNS name or IPv6 address for your instance. For more information about how to find the private key, the user name for your instance, and the DNS name or IPv6 address for an instance, see Locate the private key and Get information about your instance . To connect to your instance, use one of the following commands. a. (Public DNS) To connect using your instance's public DNS name, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-public-dns-name b. (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter the following command. ssh -i /path/my-key-pair.pem my-instance-user-name@my-instance-IPv6-address You see a response like the following: The authenticity of host 'ec2-198-51-100-1.compute-1.amazonaws.com (198-51-100-1)' can't be established. ECDSA key fingerprint is l4UB/neBad9tvkgJf1QZWxheQmR59WgrgzEimCG6kZY. Are you sure you want to continue connecting (yes/no)? Enter yes . You see a response like the following: Warning: Permanently added 'ec2-198-51-100-1.compute-1.amazonaws.com' (ECDSA) to the list of known hosts.","title":"Connect to your Linux instance using an SSH client"},{"location":"EC2/#connecting-to-your-linux-instance-from-windows-using-putty-or-mobaxterm","text":"After you launch your instance, you can connect to it and use it the way that you'd use a computer sitting in front of you. The following instructions explain how to connect to your instance using PuTTY, and MobaXterm, free SSH client for Windows. If you receive an error while attempting to connect to your instance, see General prerequisites for connecting to your instance .","title":"Connecting to your Linux instance from Windows using PuTTY or MobaXterm"},{"location":"EC2/#prerequisites_2","text":"Before you connect to your Linux instance using PuTTY, complete the following prerequisites. Verify that the instance is ready After you launch an instance, it can take a few minutes for the instance to be ready so that you can connect to it. Check that your instance has passed its status checks. You can view this information in the Status Checks column on the Instances page. Verify the general prerequisites for connecting to your instance Check the General prerequisites for connecting to your instance . Install PuTTY on your local computer Download and install PuTTY from the PuTTY download page . If you already have an older version of PuTTY installed, we recommend that you download the latest version. Be sure to install the entire suite. Or Install MobaXterm on your local computer Download and install MobaXterm from the MobaXterm download page . Convert your private key using PuTTYgen In case you do not have a .ppk , locate the private key ( .pem file) for the key pair that you specified when you launched the instance. Convert the .pem file to a .ppk file for use with PuTTY. For more information, follow the steps in the next subsection.","title":"Prerequisites"},{"location":"EC2/#convert-your-private-key-using-puttygen","text":"PuTTY does not natively support the private key format for SSH keys. PuTTY provides a tool named PuTTYgen, which converts keys to the required format for PuTTY. You must convert your private key ( .pem file) into this format ( .ppk file) as follows in order to connect to your instance using PuTTY. To convert your private key From the Start menu, choose All Programs, PuTTY, PuTTYgen . Under Type of key to generate , choose RSA . If you're using an older version of PuTTYgen, choose SSH-2 RSA . Choose Load . By default, PuTTYgen displays only files with the extension .ppk . To locate your .pem file, choose the option to display files of all types. Select all file types Select your .pem file for the key pair that you specified when you launched your instance and choose Open . PuTTYgen displays a notice that the .pem file was successfully imported. Choose OK . To save the key in the format that PuTTY can use, choose Save private key . PuTTYgen displays a warning about saving the key without a passphrase. Choose Yes . /!\\ Note A passphrase on a private key is an extra layer of protection. Even if your private key is discovered, it can't be used without the passphrase. The downside to using a passphrase is that it makes automation harder because human intervention is needed to log on to an instance, or to copy files to an instance. Specify the same name for the key that you used for the key pair (for example, my-key-pair ) and choose Save . PuTTY automatically adds the .ppk file extension. Your private key is now in the correct format for use with PuTTY. You can now connect to your instance using PuTTY's SSH client.","title":"Convert your private key using PuTTYgen"},{"location":"EC2/#connecting-to-your-linux-instance","text":"Use the following procedure to connect to your Linux instance using PuTTY. You need the .ppk file that you created for your private key. For more information, see Convert your private key using PuTTYgen in the preceding section. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance . To connect to your instance using PuTTY Start PuTTY (from the Start menu, choose All Programs, PuTTY, PuTTY ). In the Category pane , choose Session and complete the following fields: a. In the Host Name box, do one of the following: (Public DNS) To connect using your instance's public DNS name, enter my-instance-user-name@my-instance-public-dns-name . (IPv6) Alternatively, if your instance has an IPv6 address, to connect using your instance's IPv6 address, enter my-instance-user-name@my-instance-IPv6-address . For information about how to get the user name for your instance, and the public DNS name or IPv6 address of your instance, see Get information about your instance . b. Ensure that the Port value is 22. c. Under Connection type , select SSH . (Optional) You can configure PuTTY to automatically send 'keepalive' data at regular intervals to keep the session active. This is useful to avoid disconnecting from your instance due to session inactivity. In the Category pane, choose Connection , and then enter the required interval in the Seconds between keepalives field. For example, if your session disconnects after 10 minutes of inactivity, enter 180 to configure PuTTY to send keepalive data every 3 minutes. In the Category pane, expand Connection , expand SSH , and then choose Auth . Complete the following: a. Choose Browse . b. Select the .ppk file that you generated for your key pair and choose Open . c. (Optional) If you plan to start this session again later, you can save the session information for future use. Under Category , choose Session , enter a name for the session in Saved Sessions , and then choose Save . d. Choose Open . If this is the first time you have connected to this instance, PuTTY displays a security alert dialog box that asks whether you trust the host to which you are connecting. a. Choose Yes . A window opens and you are connected to your instance. /!\\ Note If you specified a passphrase when you converted your private key to PuTTY's format, you must provide that passphrase when you log in to the instance. If you receive an error while attempting to connect to your instance, see Troubleshooting Connecting to Your Instance .","title":"Connecting to your Linux instance"},{"location":"EC2/#getting-started-with-amazon-ec2-windows-instances","text":"To get started with a Windows instance, see Getting started with Amazon EC2 Windows instances .","title":"Getting started with Amazon EC2 Windows Instances"},{"location":"EC2/#connecting-to-your-windows-instance","text":"To connect to a Windows instance, see Connecting to Your Windows Instance in the Amazon EC2 User Guide for Windows Instances.","title":"Connecting to your Windows instance"}]}